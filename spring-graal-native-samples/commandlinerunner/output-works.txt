[INFO] Scanning for projects...
[INFO] 
[INFO] -------------------< com.example:commandlinerunner >--------------------
[INFO] Building commandlinerunner 0.0.1-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-dependency-plugin:3.1.1:build-classpath (default) @ commandlinerunner ---
[INFO] Dependencies classpath:
/Users/aclement/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.0.M1/spring-boot-starter-2.3.0.M1.jar:/Users/aclement/.m2/repository/org/springframework/boot/spring-boot/2.3.0.M1/spring-boot-2.3.0.M1.jar:/Users/aclement/.m2/repository/org/springframework/spring-context/5.2.3.RELEASE/spring-context-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/spring-aop/5.2.3.RELEASE/spring-aop-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/spring-beans/5.2.3.RELEASE/spring-beans-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/spring-expression/5.2.3.RELEASE/spring-expression-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.3.0.M1/spring-boot-autoconfigure-2.3.0.M1.jar:/Users/aclement/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.3.0.M1/spring-boot-starter-logging-2.3.0.M1.jar:/Users/aclement/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/aclement/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/aclement/.m2/repository/org/slf4j/slf4j-api/1.7.29/slf4j-api-1.7.29.jar:/Users/aclement/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.12.1/log4j-to-slf4j-2.12.1.jar:/Users/aclement/.m2/repository/org/apache/logging/log4j/log4j-api/2.12.1/log4j-api-2.12.1.jar:/Users/aclement/.m2/repository/org/slf4j/jul-to-slf4j/1.7.29/jul-to-slf4j-1.7.29.jar:/Users/aclement/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/aclement/.m2/repository/org/springframework/spring-core/5.2.3.RELEASE/spring-core-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/org/springframework/spring-jcl/5.2.3.RELEASE/spring-jcl-5.2.3.RELEASE.jar:/Users/aclement/.m2/repository/org/yaml/snakeyaml/1.25/snakeyaml-1.25.jar:/Users/aclement/.m2/repository/org/springframework/spring-context-indexer/5.2.3.RELEASE/spring-context-indexer-5.2.3.RELEASE.jar
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ commandlinerunner ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 0 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ commandlinerunner ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 2 source files to /Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ commandlinerunner ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ commandlinerunner ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to /Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ commandlinerunner ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- maven-jar-plugin:3.2.0:jar (default-jar) @ commandlinerunner ---
[INFO] Building jar: /Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/commandlinerunner-0.0.1-SNAPSHOT.jar
[INFO] 
[INFO] --- spring-boot-maven-plugin:2.3.0.M1:repackage (repackage) @ commandlinerunner ---
[INFO] Replacing main artifact with repackaged archive
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2.204 s
[INFO] Finished at: 2020-02-10T12:05:18-08:00
[INFO] ------------------------------------------------------------------------
Warning: Ignoring server-mode native-image argument --no-server.
Executing [
/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/bin/java \
-XX:+UnlockExperimentalVMOptions \
-XX:+EnableJVMCI \
-Dtruffle.TrustAllTruffleRuntimeProviders=true \
-Dtruffle.TruffleRuntime=com.oracle.truffle.api.impl.DefaultTruffleRuntime \
-Dgraalvm.ForcePolyglotInvalid=true \
-Dgraalvm.locatorDisabled=true \
-d64 \
-XX:-UseJVMCIClassLoader \
-XX:-UseJVMCICompiler \
-Xss10m \
-Xms1g \
-Xmx14g \
-Duser.country=US \
-Duser.language=en \
-Djava.awt.headless=true \
-Dorg.graalvm.version=dev \
-Dorg.graalvm.config= \
-Dcom.oracle.graalvm.isaot=true \
-Djava.system.class.loader=com.oracle.svm.hosted.NativeImageSystemClassLoader \
-Xshare:off \
-Djvmci.class.path.append=/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/jvmci/graal.jar \
-javaagent:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/svm.jar \
-Djdk.internal.lambda.disableEagerInitialization=true \
-Djdk.internal.lambda.eagerlyInitialize=false \
-Djava.lang.invoke.InnerClassLambdaMetafactory.initializeLambdas=false \
-Dverbose=true \
-DremoveUnusedAutoconfig=true \
-DremoveYamlSupport=true \
-Xbootclasspath/a:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/boot/graal-sdk.jar \
-cp \
/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/llvm-wrapper-shadowed.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/svm.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/objectfile.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/graal-llvm.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/javacpp-shadowed.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/svm-llvm.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/pointsto.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/jvmci/graal.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/jvmci/graal-management.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/jvmci/jvmci-api.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/jvmci/jvmci-hotspot.jar \
com.oracle.svm.hosted.NativeImageGeneratorRunner \
-imagecp \
/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/boot/graal-sdk.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/llvm-wrapper-shadowed.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/svm.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/objectfile.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/graal-llvm.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/llvm-platform-specific-shadowed.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/javacpp-shadowed.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/svm-llvm.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/builder/pointsto.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/jvmci/graal.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/jvmci/graal-management.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/jvmci/jvmci-api.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/jvmci/jvmci-hotspot.jar:/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/library-support.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/classes:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-aop-5.2.3.RELEASE.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/log4j-to-slf4j-2.12.1.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-boot-autoconfigure-2.3.0.M1.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/log4j-api-2.12.1.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-boot-starter-2.3.0.M1.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-expression-5.2.3.RELEASE.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/snakeyaml-1.25.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/logback-classic-1.2.3.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-boot-2.3.0.M1.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-context-5.2.3.RELEASE.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/jul-to-slf4j-1.7.29.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-boot-starter-logging-2.3.0.M1.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-context-indexer-5.2.3.RELEASE.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/logback-core-1.2.3.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/jakarta.annotation-api-1.3.5.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/slf4j-api-1.7.29.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-beans-5.2.3.RELEASE.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-jcl-5.2.3.RELEASE.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image/BOOT-INF/lib/spring-core-5.2.3.RELEASE.jar:/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image:/Users/aclement/gits6/spring-graal-native/spring-graal-native-feature/target/spring-graal-native-feature-0.6.0.BUILD-SNAPSHOT.jar \
-H:Path=/Users/aclement/gits6/spring-graal-native/spring-graal-native-samples/commandlinerunner/target/native-image \
-H:ClassInitialization=:build_time \
-H:FallbackThreshold=0 \
-H:Name=commandlinerunner \
-H:+ReportExceptionStackTraces \
-H:+AllowIncompleteClasspath \
-H:+ReportUnsupportedElementsAtRuntime \
-H:CLibraryPath=/Users/aclement/gits/8/graal/sdk/mxbuild/darwin-amd64/GRAALVM_UNKNOWN_JAVA8/graalvm-unknown-java8-20.0.0-dev/Contents/Home/jre/lib/svm/clibraries/darwin-amd64 \
-H:Class=com.example.commandlinerunner.CommandlinerunnerApplication
]
[commandlinerunner:52117]    classlist:   4,841.71 ms,  1.59 GB
 ____             _               _____          _                  
/ ___| _ __  _ __(_)_ __   __ _  |  ___|__  __ _| |_ _   _ _ __ ___ 
\___ \| '_ \| '__| | '_ \ / _` | | |_ / _ \/ _` | __| | | | '__/ _ \
 ___) | |_) | |  | | | | | (_| | |  _|  __/ (_| | |_| |_| | | |  __/
|____/| .__/|_|  |_|_| |_|\__, | |_|  \___|\__,_|\__|\__,_|_|  \___|
      |_|                 |___/                                     

Removing unused configurations
Turning on verbose mode for the feature
Removing Yaml support
[commandlinerunner:52117]        (cap):   1,087.46 ms,  1.59 GB
DUPLICATE: org.reactivestreams.Publisher
Found #336 types in static reflection list to register
/reflect.json included org.reactivestreams.Publisher but it doesn't exist on the classpath, skipping...
/reflect.json included javax.persistence.Entity but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.repository.PagingAndSortingRepository but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.repository.CrudRepository but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.repository.Repository but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.jpa.repository.JpaRepository but it doesn't exist on the classpath, skipping...
/reflect.json included app.main.model.FooRepository but it doesn't exist on the classpath, skipping...
/reflect.json included com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.servlet.View but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.transaction.TransactionManager but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration but it doesn't exist on the classpath, skipping...
/reflect.json included reactor.core.publisher.Flux but it doesn't exist on the classpath, skipping...
/reflect.json included org.thymeleaf.spring5.ISpringTemplateEngine but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.ClearEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.EventType[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.MergeEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostCollectionRecreateEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostCollectionRemoveEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostCollectionUpdateEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostDeleteEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostInsertEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostLoadEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostUpdateEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreCollectionRecreateEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreCollectionRemoveEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreCollectionUpdateEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreDeleteEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreInsertEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreLoadEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreUpdateEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.RefreshEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.ReplicateEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.SaveOrUpdateEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.LockEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.InitializeCollectionEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.ResolveNaturalIdEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.LoadEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.FlushEntityEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.FlushEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.EvictEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.DirtyCheckEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.DeleteEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.AutoFlushEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PersistEventListener[] but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.validator.internal.util.logging.Log_$logger but it doesn't exist on the classpath, skipping...
/reflect.json included org.thymeleaf.extras.java8time.expression.Temporals but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.persister.collection.OneToManyPersister but it doesn't exist on the classpath, skipping...
/reflect.json included com.google.protobuf.ExtensionRegistry but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.http.codec.support.DefaultClientCodecConfigurer but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.http.codec.support.DefaultServerCodecConfigurer but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.annotations.common.Version but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.AutoFlushEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.ClearEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.DeleteEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.DirtyCheckEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.EvictEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.FlushEntityEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.FlushEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.InitializeCollectionEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.LoadEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.LockEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.MergeEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PersistEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostCollectionRecreateEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostCollectionRemoveEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostCollectionUpdateEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostDeleteEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostInsertEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostLoadEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PostUpdateEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreCollectionRecreateEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreCollectionRemoveEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreCollectionUpdateEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreDeleteEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreInsertEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreLoadEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.PreUpdateEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.RefreshEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.ReplicateEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.ResolveNaturalIdEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.SaveOrUpdateEventListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.event.spi.EventType but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.dialect.H2Dialect but it doesn't exist on the classpath, skipping...
/reflect.json included org.jboss.logging.BasicLogger but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.annotations.common.util.impl.Log_$logger but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.annotations.common.util.impl.Log but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy but it doesn't exist on the classpath, skipping...
/reflect.json included com.google.gson.GsonBuilder but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.aop.aspectj.AspectJAwareAdvisorAutoProxyCreator but it doesn't exist on the classpath, skipping...
/reflect.json included javax.persistence.EntityManagerFactory but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.orm.jpa.EntityManagerProxy but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.query.QueryProducer but it doesn't exist on the classpath, skipping...
/reflect.json included javax.persistence.EntityManager but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.jpa.HibernateEntityManagerFactory but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.validator.HibernateValidatorConfiguration but it doesn't exist on the classpath, skipping...
/reflect.json included javax.validation.spi.ConfigurationState but it doesn't exist on the classpath, skipping...
/reflect.json included javax.validation.Configuration but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.validation.beanvalidation.LocalValidatorFactoryBean but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactory but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.http.client.reactive.ReactorResourceFactory but it doesn't exist on the classpath, skipping...
/reflect.json included org.apache.catalina.servlets.DefaultServlet but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler but it doesn't exist on the classpath, skipping...
/reflect.json included org.apache.tomcat.websocket.server.WsContextListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.servlet.view.BeanNameViewResolver but it doesn't exist on the classpath, skipping...
/reflect.json included org.apache.tomcat.util.descriptor.web.ErrorPage but it doesn't exist on the classpath, skipping...
/reflect.json included org.apache.coyote.http11.Http11NioProtocol but it doesn't exist on the classpath, skipping...
/reflect.json included org.apache.coyote.http11.AbstractHttp11JsseProtocol but it doesn't exist on the classpath, skipping...
/reflect.json included org.apache.coyote.http11.AbstractHttp11Protocol but it doesn't exist on the classpath, skipping...
/reflect.json included org.apache.coyote.AbstractProtocol but it doesn't exist on the classpath, skipping...
/reflect.json included org.apache.coyote.ProtocolHandler but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.context.ConfigurableWebApplicationContext but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.context.WebApplicationContext but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory$StaticResourceConfigurer but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory$LoaderHidingResourceRoot but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.reactive.function.client.WebClient$Builder but it doesn't exist on the classpath, skipping...
/reflect.json included com.fasterxml.jackson.databind.ObjectMapper but it doesn't exist on the classpath, skipping...
/reflect.json included com.fasterxml.jackson.core.JsonGenerator but it doesn't exist on the classpath, skipping...
/reflect.json included com.fasterxml.jackson.dataformat.smile.SmileFactory but it doesn't exist on the classpath, skipping...
/reflect.json included com.google.protobuf.Message but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.bind.annotation.GetMapping but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.bind.annotation.RequestMapping but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.bind.annotation.PostMapping but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.bind.annotation.ResponseBody but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.bind.annotation.RequestBody but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.bind.annotation.RestController but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.reactive.config.EnableWebFlux but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessorRegistrar but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.http.converter.FormHttpMessageConverter but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.bind.annotation.RequestParam but it doesn't exist on the classpath, skipping...
/reflect.json included org.thymeleaf.spring5.view.reactive.ThymeleafReactiveView but it doesn't exist on the classpath, skipping...
/reflect.json included org.thymeleaf.spring5.expression.Mvc$NonSpring41MvcUriComponentsBuilderDelegate but it doesn't exist on the classpath, skipping...
/reflect.json included org.thymeleaf.standard.expression.AdditionExpression but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.jdbc.support.SQLErrorCodes but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.transaction.TransactionDefinition but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.transaction.annotation.Propagation but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.transaction.annotation.Transactional but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.reactive.HandlerResult but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.channel.socket.nio.NioServerSocketChannel but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.channel.socket.nio.NioSocketChannel but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.http.codec.ClientCodecConfigurer but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.http.codec.ServerCodecConfigurer but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.validator.internal.util.logging.Messages but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.validator.messageinterpolation.ParameterMessageInterpolator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.validator.messageinterpolation.AbstractMessageInterpolator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.validator.internal.util.logging.Log but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.boot.autoconfigure.condition.BeanTypeRegistry but it doesn't exist on the classpath, skipping...
/reflect.json included org.h2.Driver but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.persister.entity.SingleTableEntityPersister but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.cache.spi.access.CollectionDataAccess but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.mapping.PersistentClass but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.persister.spi.PersisterCreationContext but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.cache.spi.access.NaturalIdDataAccess but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.cache.spi.access.EntityDataAccess but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.persister.entity.AbstractEntityPersister but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.persister.internal.PersisterClassResolverInitiator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.persister.spi.PersisterClassResolver but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.transaction.support.TransactionTemplate but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.id.UUIDGenerator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.id.GUIDGenerator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.id.UUIDHexGenerator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.id.Assigned but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.id.IdentityGenerator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.id.SelectGenerator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.id.enhanced.SequenceStyleGenerator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.id.SequenceHiLoGenerator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.id.IncrementGenerator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.id.ForeignGenerator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.id.SequenceIdentityGenerator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.id.enhanced.TableGenerator but it doesn't exist on the classpath, skipping...
/reflect.json included app.main.model.Foo but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.jpa.repository.config.EnableJpaRepositories but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.jpa.HibernateEntityManager but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.internal.SessionImpl but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.repository.query.QueryLookupStrategy$Key but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.jpa.repository.support.SimpleJpaRepository but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.repository.core.support.PropertiesBasedNamedQueries but it doesn't exist on the classpath, skipping...
/reflect.json included javax.persistence.GeneratedValue but it doesn't exist on the classpath, skipping...
/reflect.json included javax.persistence.Id but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.boot.autoconfigure.AutoConfigurePackages but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.boot.autoconfigure.AutoConfigurePackages$BasePackages but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.repository.query.QueryByExampleExecutor but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.orm.jpa.SharedEntityManagerCreator but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.jpa.util.JpaMetamodelCacheCleanup but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.orm.jpa.JpaVendorAdapter but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.validator.internal.engine.resolver.JPATraversableResolver but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.validator.internal.engine.resolver.TraversableResolvers but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.validator.resourceloading.PlatformResourceBundleLocator but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.validator.internal.xml.config.ValidationBootstrapParameters but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.validator.internal.engine.ConfigurationImpl but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.channel.DefaultChannelPipeline$HeadContext but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.channel.DefaultChannelPipeline$TailContext but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.channel.ChannelInboundHandlerAdapter but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.channel.ChannelHandlerAdapter but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.channel.ChannelHandler but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.channel.ChannelInboundHandler but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.bootstrap.ServerBootstrap$1 but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.channel.ChannelInitializer but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.tuple.Tuplizer but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.tuple.entity.EntityTuplizer but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.tuple.entity.AbstractEntityTuplizer but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.tuple.entity.PojoEntityTuplizer but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata but it doesn't exist on the classpath, skipping...
/reflect.json included org.h2.mvstore.db.MVTableEngine but it doesn't exist on the classpath, skipping...
/reflect.json included com.zaxxer.hikari.HikariDataSource but it doesn't exist on the classpath, skipping...
/reflect.json included com.zaxxer.hikari.HikariConfig but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.internal.EntityManagerMessageLogger but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.internal.EntityManagerMessageLogger_$logger but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.internal.CoreMessageLogger but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.internal.CoreMessageLogger_$logger but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.service.jta.platform.internal.NoJtaPlatform but it doesn't exist on the classpath, skipping...
/reflect.json included org.hibernate.Session but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.handler.codec.http.HttpServerCodec but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.channel.CombinedChannelDuplexHandler but it doesn't exist on the classpath, skipping...
/reflect.json included io.netty.channel.ChannelDuplexHandler but it doesn't exist on the classpath, skipping...
/reflect.json included reactor.netty.channel.BootstrapHandlers$BootstrapInitializerHandler but it doesn't exist on the classpath, skipping...
/reflect.json included reactor.netty.channel.ChannelOperationsHandler but it doesn't exist on the classpath, skipping...
/reflect.json included reactor.netty.http.server.HttpTrafficHandler but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.amqp.core.Queue but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.amqp.rabbit.annotation.RabbitListener but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.amqp.rabbit.connection.ChannelProxy but it doesn't exist on the classpath, skipping...
/reflect.json included com.rabbitmq.client.Channel but it doesn't exist on the classpath, skipping...
/reflect.json included com.rabbitmq.client.ShutdownNotifier but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.amqp.rabbit.annotation.RabbitListenerAnnotationBeanPostProcessor but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.amqp.rabbit.listener.RabbitListenerEndpointRegistry but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.amqp.rabbit.connection.CachingConnectionFactory but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.amqp.core.AnonymousQueue but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.amqp.core.AmqpAdmin but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.integration.config.IntegrationConfigurationBeanFactoryPostProcessor but it doesn't exist on the classpath, skipping...
/reflect.json included org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor but it doesn't exist on the classpath, skipping...
/reflect.json included reactor.core.publisher.Traces$StackWalkerCallSiteSupplierFactory but it doesn't exist on the classpath, skipping...
/reflect.json included reactor.core.publisher.Traces$SharedSecretsCallSiteSupplierFactory but it doesn't exist on the classpath, skipping...
/reflect.json included reactor.core.publisher.Traces$ExceptionCallSiteSupplierFactory but it doesn't exist on the classpath, skipping...
Skipping #250 types not on the classpath
Registering reflective access to ch.qos.logback.core.Appender: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to org.springframework.boot.logging.logback.LogbackLoggingSystem: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to ch.qos.logback.classic.pattern.DateConverter: []
Registering reflective access to ch.qos.logback.classic.pattern.LevelConverter: []
Registering reflective access to ch.qos.logback.classic.pattern.ThreadConverter: []
Registering reflective access to ch.qos.logback.classic.pattern.LoggerConverter: []
Registering reflective access to ch.qos.logback.classic.pattern.MessageConverter: []
Registering reflective access to ch.qos.logback.classic.pattern.LineSeparatorConverter: []
Registering reflective access to org.springframework.boot.logging.logback.ColorConverter: []
Registering reflective access to org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter: []
Attempting proxy registration of #24 proxies
Skipping proxy registration for [org.springframework.web.bind.annotation.RequestMapping, org.springframework.core.annotation.SynthesizedAnnotation] because of missing type: org.springframework.web.bind.annotation.RequestMapping
Skipping proxy registration for [org.springframework.web.bind.annotation.RequestMapping] because of missing type: org.springframework.web.bind.annotation.RequestMapping
Skipping proxy registration for [org.springframework.web.bind.annotation.ResponseStatus] because of missing type: org.springframework.web.bind.annotation.ResponseStatus
Skipping proxy registration for [org.springframework.web.bind.annotation.RequestBody] because of missing type: org.springframework.web.bind.annotation.RequestBody
Skipping proxy registration for [org.springframework.web.bind.annotation.ResponseBody] because of missing type: org.springframework.web.bind.annotation.ResponseBody
Skipping proxy registration for [javax.validation.Validator, org.springframework.aop.SpringProxy, org.springframework.aop.framework.Advised, org.springframework.core.DecoratingProxy] because of missing type: javax.validation.Validator
Skipping proxy registration for [org.hibernate.jpa.HibernateEntityManagerFactory, org.springframework.orm.jpa.EntityManagerFactoryInfo] because of missing type: org.hibernate.jpa.HibernateEntityManagerFactory
Skipping proxy registration for [org.hibernate.jpa.HibernateEntityManagerFactory, org.springframework.orm.jpa.EntityManagerFactoryInfo, javax.persistence.EntityManagerFactory] because of missing type: org.hibernate.jpa.HibernateEntityManagerFactory
Skipping proxy registration for [javax.persistence.Id] because of missing type: javax.persistence.Id
Skipping proxy registration for [javax.persistence.GeneratedValue] because of missing type: javax.persistence.GeneratedValue
Skipping proxy registration for [javax.persistence.Transient] because of missing type: javax.persistence.Transient
Skipping proxy registration for [org.springframework.data.jpa.repository.support.CrudMethodMetadata, org.springframework.aop.SpringProxy, org.springframework.aop.framework.Advised, org.springframework.core.DecoratingProxy] because of missing type: org.springframework.data.jpa.repository.support.CrudMethodMetadata
Skipping proxy registration for [org.hibernate.jpa.HibernateEntityManager, org.springframework.orm.jpa.EntityManagerProxy] because of missing type: org.hibernate.jpa.HibernateEntityManager
Skipping proxy registration for [org.springframework.web.bind.annotation.RequestParam] because of missing type: org.springframework.web.bind.annotation.RequestParam
Skipping proxy registration for [org.springframework.amqp.rabbit.annotation.RabbitListener] because of missing type: org.springframework.amqp.rabbit.annotation.RabbitListener
Skipping proxy registration for [org.springframework.amqp.rabbit.connection.ChannelProxy] because of missing type: org.springframework.amqp.rabbit.connection.ChannelProxy
Skipping proxy registration for [org.hibernate.query.Query, org.hibernate.query.spi.QueryImplementor] because of missing type: org.hibernate.query.Query
Skipping proxy registration for [org.springframework.boot.CommandLineRunner, app.main.Finder, org.springframework.aop.SpringProxy, org.springframework.aop.framework.Advised, org.springframework.core.DecoratingProxy] because of missing type: app.main.Finder
Skipped registration of #18 proxies - relevant types not on classpath
[commandlinerunner:52117]        setup:   2,333.46 ms,  1.59 GB
Registering resources - #64 patterns
Processing META-INF/spring.factories files...
Adding all the classes for this key: org.springframework.boot.autoconfigure.AutoConfigurationImportFilter
Registering reflective access to org.springframework.boot.autoconfigure.condition.OnBeanCondition: []
Registering reflective access to org.springframework.boot.autoconfigure.condition.OnClassCondition: []
Registering reflective access to org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition: []
Adding all the classes for this key: org.springframework.boot.diagnostics.FailureAnalyzer
Registering reflective access to org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer: []
Registering reflective access to org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingFailureAnalyzer: []
Registering reflective access to org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer: []
Registering reflective access to org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer: []
spring.factories processing, problem adding access for key org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer: org/springframework/jdbc/CannotGetJdbcConnectionException
Registering reflective access to org.springframework.boot.autoconfigure.session.NonUniqueSessionRepositoryFailureAnalyzer: []
Adding all the classes for this key: org.springframework.boot.autoconfigure.AutoConfigurationImportListener
Registering reflective access to org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener: []
Adding all the classes for this key: org.springframework.context.ApplicationContextInitializer
Registering reflective access to org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer: []
Registering reflective access to org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener: [allDeclaredConstructors]
Adding all the classes for this key: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider
Skipping processing spring.factories key org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider due to missing types
Adding all the classes for this key: org.springframework.context.ApplicationListener
Registering reflective access to org.springframework.boot.autoconfigure.BackgroundPreinitializer: []
Adding all the classes for this key: org.springframework.boot.autoconfigure.EnableAutoConfiguration
Processing spring.factories - EnableAutoConfiguration lists #121 configurations


Processing configuration type org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration
> processType: org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration
skipping org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration due to ConditionalOnPropertyCheck
no hints on org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration
Configuration type org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.aop.AopAutoConfiguration
> processType: org/springframework/boot/autoconfigure/aop/AopAutoConfiguration
#1 hints on org/springframework/boot/autoconfigure/aop/AopAutoConfiguration are: 
1) Hint{[osbaa.AopAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbaa.AopAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnPropertyCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.aop.AopAutoConfiguration: [allDeclaredConstructors, allDeclaredMethods]
WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/aop/AopAutoConfiguration = 1 (total methods including @Bean ones:1)
making this accessible: org.springframework.boot.autoconfigure.aop.AopAutoConfiguration   ALL
making this accessible: java.lang.Object   RESOURCE_CMC
making this accessible: org.springframework.boot.autoconfigure.condition.OnPropertyCondition   RESOURCE_CTORS_ONLY
making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnProperty   ANNOTATION
making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
  > processType: org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$ClassProxyingConfiguration
  #2 hints on org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$ClassProxyingConfiguration are: 
  1) Hint{[osbaa.AopAutoConfiguration$ClassProxyingConfiguration,osbac.ConditionalOnMissingClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
  2) Hint{[osbaa.AopAutoConfiguration$ClassProxyingConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
  processing hint Hint{[osbaa.AopAutoConfiguration$ClassProxyingConfiguration,osbac.ConditionalOnMissingClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
  attempting registration of 0 specific types
  attempting registration of 1 inferred types
  inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
  attempting registration of 3 elements of annotation chain
  processing hint Hint{[osbaa.AopAutoConfiguration$ClassProxyingConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
  attempting registration of 0 specific types
  attempting registration of 1 inferred types
  inferred type org.springframework.boot.autoconfigure.condition.OnPropertyCondition found, will get accessibility RESOURCE_CTORS_ONLY
  attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration: [allDeclaredConstructors, allDeclaredMethods]
  WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$ClassProxyingConfiguration = 1 (total methods including @Bean ones:1)
  making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
  making this accessible: org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration   ALL
  making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass   ANNOTATION
  making this accessible: java.lang.Object   RESOURCE_CMC
  making this accessible: org.springframework.boot.autoconfigure.condition.OnPropertyCondition   RESOURCE_CTORS_ONLY
  making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
  making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnProperty   ANNOTATION
  > processType: org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration
  #2 hints on org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration are: 
  1) Hint{[osbaa.AopAutoConfiguration$AspectJAutoProxyingConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oaw.Advice:EXISTENCE_CHECK]}
  2) Hint{[osbaa.AopAutoConfiguration$AspectJAutoProxyingConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
  processing hint Hint{[osbaa.AopAutoConfiguration$AspectJAutoProxyingConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oaw.Advice:EXISTENCE_CHECK]}
  attempting registration of 0 specific types
  attempting registration of 1 inferred types
  inferred type org.aspectj.weaver.Advice not found
  attempting registration of 2 elements of annotation chain
  processing hint Hint{[osbaa.AopAutoConfiguration$AspectJAutoProxyingConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
  attempting registration of 0 specific types
  attempting registration of 1 inferred types
  inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
  attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration: [allDeclaredConstructors, allDeclaredMethods]
  WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration = 1 (total methods including @Bean ones:1)
  making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
  making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnClass   ANNOTATION
  making this accessible: java.lang.Object   RESOURCE_CMC
  making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
  making this accessible: org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration   ALL
    > processType: org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration
    #2 hints on org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration are: 
    1) Hint{[osbaa.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration,osca.EnableAspectJAutoProxy,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osca.AspectJAutoProxyRegistrar:ALL]}
    2) Hint{[osbaa.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
    processing hint Hint{[osbaa.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration,osca.EnableAspectJAutoProxy,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osca.AspectJAutoProxyRegistrar:ALL]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.context.annotation.AspectJAutoProxyRegistrar found, will get accessibility ALL
    will follow Type:org/springframework/context/annotation/AspectJAutoProxyRegistrar
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbaa.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnPropertyCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration: [allDeclaredConstructors, allDeclaredMethods]
    WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration = 1 (total methods including @Bean ones:1)
      > processType: org/springframework/context/annotation/AspectJAutoProxyRegistrar
      no hints on org/springframework/context/annotation/AspectJAutoProxyRegistrar
Registering reflective access to org.springframework.context.annotation.AspectJAutoProxyRegistrar: [allDeclaredConstructors, allDeclaredMethods]
      making this accessible: org.springframework.context.annotation.ImportBeanDefinitionRegistrar   RESOURCE_CMC
      making this accessible: org.springframework.context.annotation.AspectJAutoProxyRegistrar   RESOURCE_CMC
      making this accessible: java.lang.Object   RESOURCE_CMC
    making this accessible: org.springframework.context.annotation.EnableAspectJAutoProxy   ANNOTATION
    making this accessible: org.springframework.context.annotation.AspectJAutoProxyRegistrar   ALL
    making this accessible: org.springframework.context.annotation.Import   ANNOTATION
    making this accessible: java.lang.Object   RESOURCE_CMC
    making this accessible: org.springframework.boot.autoconfigure.condition.OnPropertyCondition   RESOURCE_CTORS_ONLY
    making this accessible: org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration   ALL
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnProperty   ANNOTATION
    making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
    > processType: org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration
    #2 hints on org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration are: 
    1) Hint{[osbaa.AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration,osca.EnableAspectJAutoProxy,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osca.AspectJAutoProxyRegistrar:ALL]}
    2) Hint{[osbaa.AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
    processing hint Hint{[osbaa.AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration,osca.EnableAspectJAutoProxy,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osca.AspectJAutoProxyRegistrar:ALL]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.context.annotation.AspectJAutoProxyRegistrar found, will get accessibility ALL
    will follow Type:org/springframework/context/annotation/AspectJAutoProxyRegistrar
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbaa.AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnPropertyCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration: [allDeclaredConstructors, allDeclaredMethods]
    WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration = 1 (total methods including @Bean ones:1)
      > processType: org/springframework/context/annotation/AspectJAutoProxyRegistrar
      no hints on org/springframework/context/annotation/AspectJAutoProxyRegistrar
Registering reflective access to org.springframework.context.annotation.AspectJAutoProxyRegistrar: [allDeclaredConstructors, allDeclaredMethods]
      making this accessible: org.springframework.context.annotation.ImportBeanDefinitionRegistrar   RESOURCE_CMC
      making this accessible: org.springframework.context.annotation.AspectJAutoProxyRegistrar   RESOURCE_CMC
      making this accessible: java.lang.Object   RESOURCE_CMC
    making this accessible: org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration   ALL
    making this accessible: org.springframework.context.annotation.EnableAspectJAutoProxy   ANNOTATION
    making this accessible: org.springframework.context.annotation.AspectJAutoProxyRegistrar   ALL
    making this accessible: org.springframework.context.annotation.Import   ANNOTATION
    making this accessible: java.lang.Object   RESOURCE_CMC
    making this accessible: org.springframework.boot.autoconfigure.condition.OnPropertyCondition   RESOURCE_CTORS_ONLY
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnProperty   ANNOTATION
    making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
Configuration type org.springframework.boot.autoconfigure.aop.AopAutoConfiguration has passed validation


Processing configuration type org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
> processType: org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration are: 
1) Hint{[osbaa.RabbitAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[crc.Channel:EXISTENCE_CHECK,osarc.RabbitTemplate:EXISTENCE_CHECK]}
2) Hint{[osbaa.RabbitAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaa.RabbitAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaa.RabbitProperties:ALL]}
4) Hint{[osbaa.RabbitAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbaa.RabbitAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbaa.RabbitAnnotationDrivenConfiguration:ALL]}
processing hint Hint{[osbaa.RabbitAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[crc.Channel:EXISTENCE_CHECK,osarc.RabbitTemplate:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type com.rabbitmq.client.Channel not found
Configuration type org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration
> processType: org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration are: 
1) Hint{[osbab.BatchAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[js.DataSource:EXISTENCE_CHECK,osbcl.JobLauncher:EXISTENCE_CHECK]}
2) Hint{[osbab.BatchAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbab.BatchAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbab.BatchAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbab.BatchProperties:ALL]}
5) Hint{[osbab.BatchAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
6) Hint{[osbab.BatchAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbab.BatchConfigurerConfiguration:ALL]}
processing hint Hint{[osbab.BatchAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[js.DataSource:EXISTENCE_CHECK,osbcl.JobLauncher:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type javax.sql.DataSource found, will get accessibility EXISTENCE_CHECK
inferred type org.springframework.batch.core.launch.JobLauncher not found
Configuration type org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration
> processType: org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration
#8 hints on org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration are: 
1) Hint{[osbac.CacheAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
2) Hint{[osbac.CacheAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbac.CacheAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbac.CacheAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
5) Hint{[osbac.CacheAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbac.CacheAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheProperties:ALL]}
7) Hint{[osbac.CacheAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
8) Hint{[osbac.CacheAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbac.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor:ALL,osbac.CacheAutoConfiguration$CacheConfigurationImportSelector:ALL]}
processing hint Hint{[osbac.CacheAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.cache.CacheManager found, will get accessibility EXISTENCE_CHECK
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbac.CacheAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbac.CacheAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbac.CacheAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
attempting registration of 1 specific types
attempting registration of 1 inferred types
inferred type org.springframework.cache.CacheManager found, will get accessibility EXISTENCE_CHECK
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbac.CacheAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbac.CacheAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.cache.CacheProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbac.CacheAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbac.CacheAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbac.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor:ALL,osbac.CacheAutoConfiguration$CacheConfigurationImportSelector:ALL]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor found, will get accessibility ALL
will follow Type:org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor
inferred type org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector found, will get accessibility ALL
will follow Type:org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheConfigurationImportSelector
attempting registration of 2 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration: [allDeclaredConstructors, allDeclaredMethods]
registering 4 @AutoConfigureBefore/After references
WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration = 1 (total methods including @Bean ones:3)
processing 2 @Bean methods
hints on method cacheManagerCustomizers(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;:
[Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}, Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}]
processing hint Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}
attempting registration of 1 specific types
attempting registration of 0 inferred types
attempting registration of 1 elements of annotation chain
processing hint Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY (whilst processing @Bean method cacheManagerCustomizers(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;)
attempting registration of 2 elements of annotation chain
hints on method cacheAutoConfigurationValidator(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator;:
[]
  > processType: org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
  no hints on org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
Registering reflective access to org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar: [allDeclaredConstructors, allDeclaredMethods]
  making this accessible: org.springframework.context.annotation.ImportBeanDefinitionRegistrar   RESOURCE_CMC
  making this accessible: org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar   RESOURCE_CMC
  making this accessible: java.lang.Object   RESOURCE_CMC
  > processType: org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor
  #3 hints on org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor are: 
  1) Hint{[osbac.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osoj.LocalContainerEntityManagerFactoryBean:EXISTENCE_CHECK]}
  2) Hint{[osbac.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
  3) Hint{[osbac.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
  processing hint Hint{[osbac.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osoj.LocalContainerEntityManagerFactoryBean:EXISTENCE_CHECK]}
  attempting registration of 0 specific types
  attempting registration of 1 inferred types
  inferred type org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean not found
  attempting registration of 2 elements of annotation chain
  processing hint Hint{[osbac.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
  attempting registration of 0 specific types
  attempting registration of 1 inferred types
  inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
  attempting registration of 3 elements of annotation chain
  processing hint Hint{[osbac.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
  attempting registration of 0 specific types
  attempting registration of 1 inferred types
  inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
  attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor: [allDeclaredConstructors, allDeclaredMethods]
    > processType: org/springframework/boot/autoconfigure/data/jpa/EntityManagerFactoryDependsOnPostProcessor
    no hints on org/springframework/boot/autoconfigure/data/jpa/EntityManagerFactoryDependsOnPostProcessor
Registering reflective access to org.springframework.boot.autoconfigure.data.jpa.EntityManagerFactoryDependsOnPostProcessor: [allDeclaredConstructors, allDeclaredMethods]
      > processType: org/springframework/boot/autoconfigure/AbstractDependsOnBeanFactoryPostProcessor
      no hints on org/springframework/boot/autoconfigure/AbstractDependsOnBeanFactoryPostProcessor
Registering reflective access to org.springframework.boot.autoconfigure.AbstractDependsOnBeanFactoryPostProcessor: [allDeclaredConstructors, allDeclaredMethods]
      making this accessible: org.springframework.core.Ordered   RESOURCE_CMC
      making this accessible: org.springframework.beans.factory.config.BeanFactoryPostProcessor   RESOURCE_CMC
      making this accessible: java.lang.Object   RESOURCE_CMC
      making this accessible: org.springframework.boot.autoconfigure.AbstractDependsOnBeanFactoryPostProcessor   RESOURCE_CMC
    making this accessible: org.springframework.core.Ordered   RESOURCE_CMC
    making this accessible: org.springframework.beans.factory.config.BeanFactoryPostProcessor   RESOURCE_CMC
    making this accessible: java.lang.Object   RESOURCE_CMC
    making this accessible: org.springframework.boot.autoconfigure.data.jpa.EntityManagerFactoryDependsOnPostProcessor   RESOURCE_CMC
    making this accessible: org.springframework.boot.autoconfigure.AbstractDependsOnBeanFactoryPostProcessor   RESOURCE_CMC
  making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
  making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnBean   ANNOTATION
  making this accessible: org.springframework.core.Ordered   RESOURCE_CMC
  making this accessible: org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor   ALL
  making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnClass   ANNOTATION
  making this accessible: org.springframework.beans.factory.config.BeanFactoryPostProcessor   RESOURCE_CMC
  making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
  making this accessible: java.lang.Object   RESOURCE_CMC
  making this accessible: org.springframework.boot.autoconfigure.data.jpa.EntityManagerFactoryDependsOnPostProcessor   RESOURCE_CMC
  making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
  making this accessible: org.springframework.boot.autoconfigure.AbstractDependsOnBeanFactoryPostProcessor   RESOURCE_CMC
  > processType: org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheConfigurationImportSelector
  #1 hints on org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheConfigurationImportSelector are: 
  1) Hint{[osbac.CacheAutoConfiguration$CacheConfigurationImportSelector],skipIfTypesMissing=false,follow=true,specificTypes=[osbac.GenericCacheConfiguration:ALL,osbac.EhCacheCacheConfiguration:ALL,osbac.HazelcastCacheConfiguration:ALL,osbac.InfinispanCacheConfiguration:ALL,osbac.JCacheCacheConfiguration:ALL,osbac.CouchbaseCacheConfiguration:ALL,osbac.RedisCacheConfiguration:ALL,osbac.CaffeineCacheConfiguration:ALL,osbac.SimpleCacheConfiguration:ALL,osbac.NoOpCacheConfiguration:ALL],inferredTypes=[]}
  processing hint Hint{[osbac.CacheAutoConfiguration$CacheConfigurationImportSelector],skipIfTypesMissing=false,follow=true,specificTypes=[osbac.GenericCacheConfiguration:ALL,osbac.EhCacheCacheConfiguration:ALL,osbac.HazelcastCacheConfiguration:ALL,osbac.InfinispanCacheConfiguration:ALL,osbac.JCacheCacheConfiguration:ALL,osbac.CouchbaseCacheConfiguration:ALL,osbac.RedisCacheConfiguration:ALL,osbac.CaffeineCacheConfiguration:ALL,osbac.SimpleCacheConfiguration:ALL,osbac.NoOpCacheConfiguration:ALL],inferredTypes=[]}
  attempting registration of 10 specific types
  will follow specific type reference org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration
  will follow specific type reference org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration
  will follow specific type reference org.springframework.boot.autoconfigure.cache.HazelcastCacheConfiguration
  will follow specific type reference org.springframework.boot.autoconfigure.cache.InfinispanCacheConfiguration
  will follow specific type reference org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration
  will follow specific type reference org.springframework.boot.autoconfigure.cache.CouchbaseCacheConfiguration
  will follow specific type reference org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration
  will follow specific type reference org.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration
  will follow specific type reference org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration
  will follow specific type reference org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration
  attempting registration of 0 inferred types
  attempting registration of 1 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector: [allDeclaredConstructors, allDeclaredMethods]
    > processType: org/springframework/boot/autoconfigure/cache/GenericCacheConfiguration
    #4 hints on org/springframework/boot/autoconfigure/cache/GenericCacheConfiguration are: 
    1) Hint{[osbac.GenericCacheConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    2) Hint{[osbac.GenericCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    3) Hint{[osbac.GenericCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    4) Hint{[osbac.GenericCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    processing hint Hint{[osbac.GenericCacheConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.GenericCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    attempting registration of 1 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.cache.CacheManager found, will get accessibility EXISTENCE_CHECK
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.GenericCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.GenericCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.cache.CacheCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 2 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: [allDeclaredConstructors, allDeclaredMethods]
    WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/cache/GenericCacheConfiguration = 1 (total methods including @Bean ones:2)
    processing 1 @Bean methods
    hints on method cacheManager(Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;Ljava/util/Collection;)Lorg/springframework/cache/support/SimpleCacheManager;:
[]
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnBean   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration   ALL
    making this accessible: org.springframework.cache.support.SimpleCacheManager   EXISTENCE_MC
    making this accessible: org.springframework.cache.CacheManager   EXISTENCE_CHECK
    making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
    making this accessible: java.lang.Object   RESOURCE_CMC
This is in the constant data, does it need to stay in there? org.springframework.boot.autoconfigure.cache.CacheCondition  (dynamically requested access is RESOURCE_CTORS_ONLY)
    making this accessible: org.springframework.boot.autoconfigure.cache.CacheCondition   RESOURCE_CTORS_ONLY
WARNING: type org.springframework.boot.autoconfigure.cache.CacheCondition being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
    making this accessible: org.springframework.context.annotation.Bean   ANNOTATION
    making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
    > processType: org/springframework/boot/autoconfigure/cache/EhCacheCacheConfiguration
    #5 hints on org/springframework/boot/autoconfigure/cache/EhCacheCacheConfiguration are: 
    1) Hint{[osbac.EhCacheCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osce.EhCacheCacheManager:EXISTENCE_CHECK,nse.Cache:EXISTENCE_CHECK]}
    2) Hint{[osbac.EhCacheCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    3) Hint{[osbac.EhCacheCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    4) Hint{[osbac.EhCacheCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    5) Hint{[osbac.EhCacheCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.EhCacheCacheConfiguration$ConfigAvailableCondition:RESOURCE_CTORS_ONLY,osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    processing hint Hint{[osbac.EhCacheCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osce.EhCacheCacheManager:EXISTENCE_CHECK,nse.Cache:EXISTENCE_CHECK]}
    attempting registration of 0 specific types
    attempting registration of 2 inferred types
    inferred type org.springframework.cache.ehcache.EhCacheCacheManager not found
    inferred type net.sf.ehcache.Cache not found
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.EhCacheCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.EhCacheCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    attempting registration of 1 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.cache.CacheManager found, will get accessibility EXISTENCE_CHECK
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.EhCacheCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.EhCacheCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.EhCacheCacheConfiguration$ConfigAvailableCondition:RESOURCE_CTORS_ONLY,osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 2 inferred types
    inferred type org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$ConfigAvailableCondition found, will get accessibility RESOURCE_CTORS_ONLY
    inferred type org.springframework.boot.autoconfigure.cache.CacheCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 2 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration: [allDeclaredConstructors, allDeclaredMethods]
    WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/cache/EhCacheCacheConfiguration = 1 (total methods including @Bean ones:3)
    processing 2 @Bean methods
This is in the constant data, does it need to stay in there? org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$ConfigAvailableCondition  (dynamically requested access is RESOURCE_CTORS_ONLY)
    making this accessible: org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$ConfigAvailableCondition   RESOURCE_CTORS_ONLY
WARNING: type org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$ConfigAvailableCondition being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
    making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnClass   ANNOTATION
    making this accessible: org.springframework.cache.CacheManager   EXISTENCE_CHECK
    making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
    making this accessible: java.lang.Object   RESOURCE_CMC
This is in the constant data, does it need to stay in there? org.springframework.boot.autoconfigure.cache.CacheCondition  (dynamically requested access is RESOURCE_CTORS_ONLY)
    making this accessible: org.springframework.boot.autoconfigure.cache.CacheCondition   RESOURCE_CTORS_ONLY
WARNING: type org.springframework.boot.autoconfigure.cache.CacheCondition being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
    making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration   ALL
    making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
      > processType: org/springframework/boot/autoconfigure/cache/EhCacheCacheConfiguration$ConfigAvailableCondition
      no hints on org/springframework/boot/autoconfigure/cache/EhCacheCacheConfiguration$ConfigAvailableCondition
WARNING: type org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$ConfigAvailableCondition being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
        > processType: org/springframework/boot/autoconfigure/condition/ResourceCondition
        no hints on org/springframework/boot/autoconfigure/condition/ResourceCondition
          > processType: org/springframework/boot/autoconfigure/condition/SpringBootCondition
          no hints on org/springframework/boot/autoconfigure/condition/SpringBootCondition
          making this accessible: org.springframework.context.annotation.Condition   RESOURCE_CMC
          making this accessible: java.lang.Object   RESOURCE_CMC
          making this accessible: org.springframework.boot.autoconfigure.condition.SpringBootCondition   RESOURCE_CTORS_ONLY
        making this accessible: org.springframework.context.annotation.Condition   RESOURCE_CMC
        making this accessible: org.springframework.boot.autoconfigure.condition.ResourceCondition   RESOURCE_CTORS_ONLY
        making this accessible: java.lang.Object   RESOURCE_CMC
        making this accessible: org.springframework.boot.autoconfigure.condition.SpringBootCondition   RESOURCE_CTORS_ONLY
This is in the constant data, does it need to stay in there? org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$ConfigAvailableCondition  (dynamically requested access is RESOURCE_CTORS_ONLY)
      making this accessible: org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$ConfigAvailableCondition   RESOURCE_CTORS_ONLY
WARNING: type org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$ConfigAvailableCondition being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
      making this accessible: org.springframework.context.annotation.Condition   RESOURCE_CMC
      making this accessible: org.springframework.boot.autoconfigure.condition.ResourceCondition   RESOURCE_CTORS_ONLY
      making this accessible: java.lang.Object   RESOURCE_CMC
      making this accessible: org.springframework.boot.autoconfigure.condition.SpringBootCondition   RESOURCE_CTORS_ONLY
    > processType: org/springframework/boot/autoconfigure/cache/HazelcastCacheConfiguration
    #7 hints on org/springframework/boot/autoconfigure/cache/HazelcastCacheConfiguration are: 
    1) Hint{[osbac.HazelcastCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[chsc.HazelcastCacheManager:EXISTENCE_CHECK,chc.HazelcastInstance:EXISTENCE_CHECK]}
    2) Hint{[osbac.HazelcastCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    3) Hint{[osbac.HazelcastCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    4) Hint{[osbac.HazelcastCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    5) Hint{[osbac.HazelcastCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    6) Hint{[osbac.HazelcastCacheConfiguration,osbac.ConditionalOnSingleCandidate],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[chc.HazelcastInstance:EXISTENCE_CHECK]}
    7) Hint{[osbac.HazelcastCacheConfiguration,osbac.ConditionalOnSingleCandidate,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    processing hint Hint{[osbac.HazelcastCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[chsc.HazelcastCacheManager:EXISTENCE_CHECK,chc.HazelcastInstance:EXISTENCE_CHECK]}
    attempting registration of 0 specific types
    attempting registration of 2 inferred types
    inferred type com.hazelcast.spring.cache.HazelcastCacheManager not found
    inferred type com.hazelcast.core.HazelcastInstance not found
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.HazelcastCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.HazelcastCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    attempting registration of 1 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.cache.CacheManager found, will get accessibility EXISTENCE_CHECK
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.HazelcastCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.HazelcastCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.cache.CacheCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.HazelcastCacheConfiguration,osbac.ConditionalOnSingleCandidate],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[chc.HazelcastInstance:EXISTENCE_CHECK]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type com.hazelcast.core.HazelcastInstance not found
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.HazelcastCacheConfiguration,osbac.ConditionalOnSingleCandidate,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.HazelcastCacheConfiguration: [allDeclaredConstructors, allDeclaredMethods]
    WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/cache/HazelcastCacheConfiguration = 1 (total methods including @Bean ones:2)
    processing 1 @Bean methods
    making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnClass   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.cache.HazelcastCacheConfiguration   ALL
    making this accessible: org.springframework.cache.CacheManager   EXISTENCE_CHECK
    making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
    making this accessible: java.lang.Object   RESOURCE_CMC
This is in the constant data, does it need to stay in there? org.springframework.boot.autoconfigure.cache.CacheCondition  (dynamically requested access is RESOURCE_CTORS_ONLY)
    making this accessible: org.springframework.boot.autoconfigure.cache.CacheCondition   RESOURCE_CTORS_ONLY
WARNING: type org.springframework.boot.autoconfigure.cache.CacheCondition being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
    making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
    > processType: org/springframework/boot/autoconfigure/cache/InfinispanCacheConfiguration
    #5 hints on org/springframework/boot/autoconfigure/cache/InfinispanCacheConfiguration are: 
    1) Hint{[osbac.InfinispanCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oisep.SpringEmbeddedCacheManager:EXISTENCE_CHECK]}
    2) Hint{[osbac.InfinispanCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    3) Hint{[osbac.InfinispanCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    4) Hint{[osbac.InfinispanCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    5) Hint{[osbac.InfinispanCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    processing hint Hint{[osbac.InfinispanCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oisep.SpringEmbeddedCacheManager:EXISTENCE_CHECK]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager not found
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.InfinispanCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.InfinispanCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    attempting registration of 1 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.cache.CacheManager found, will get accessibility EXISTENCE_CHECK
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.InfinispanCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.InfinispanCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.cache.CacheCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 2 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.InfinispanCacheConfiguration: [allDeclaredConstructors, allDeclaredMethods]
    WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/cache/InfinispanCacheConfiguration = 4 (total methods including @Bean ones:6)
    processing 2 @Bean methods
    making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnClass   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.cache.InfinispanCacheConfiguration   ALL
    making this accessible: org.springframework.cache.CacheManager   EXISTENCE_CHECK
    making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
    making this accessible: java.lang.Object   RESOURCE_CMC
This is in the constant data, does it need to stay in there? org.springframework.boot.autoconfigure.cache.CacheCondition  (dynamically requested access is RESOURCE_CTORS_ONLY)
    making this accessible: org.springframework.boot.autoconfigure.cache.CacheCondition   RESOURCE_CTORS_ONLY
WARNING: type org.springframework.boot.autoconfigure.cache.CacheCondition being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
    making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
    > processType: org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration
    #6 hints on org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration are: 
    1) Hint{[osbac.JCacheCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oscj.JCacheCacheManager:EXISTENCE_CHECK,jc.Caching:EXISTENCE_CHECK]}
    2) Hint{[osbac.JCacheCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    3) Hint{[osbac.JCacheCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    4) Hint{[osbac.JCacheCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    5) Hint{[osbac.JCacheCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY,osbac.JCacheCacheConfiguration$JCacheAvailableCondition:RESOURCE_CTORS_ONLY]}
    6) Hint{[osbac.JCacheCacheConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbac.HazelcastJCacheCustomizationConfiguration:ALL]}
    processing hint Hint{[osbac.JCacheCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oscj.JCacheCacheManager:EXISTENCE_CHECK,jc.Caching:EXISTENCE_CHECK]}
    attempting registration of 0 specific types
    attempting registration of 2 inferred types
    inferred type org.springframework.cache.jcache.JCacheCacheManager not found
    inferred type javax.cache.Caching not found
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.JCacheCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.JCacheCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    attempting registration of 1 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.cache.CacheManager found, will get accessibility EXISTENCE_CHECK
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.JCacheCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.JCacheCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY,osbac.JCacheCacheConfiguration$JCacheAvailableCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 2 inferred types
    inferred type org.springframework.boot.autoconfigure.cache.CacheCondition found, will get accessibility RESOURCE_CTORS_ONLY
    inferred type org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheAvailableCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.JCacheCacheConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbac.HazelcastJCacheCustomizationConfiguration:ALL]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration found, will get accessibility ALL
    will follow Type:org/springframework/boot/autoconfigure/cache/HazelcastJCacheCustomizationConfiguration
    attempting registration of 2 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration: [allDeclaredConstructors, allDeclaredMethods]
    WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration = 7 (total methods including @Bean ones:9)
    processing 2 @Bean methods
      > processType: org/springframework/boot/autoconfigure/cache/HazelcastJCacheCustomizationConfiguration
      #2 hints on org/springframework/boot/autoconfigure/cache/HazelcastJCacheCustomizationConfiguration are: 
      1) Hint{[osbac.HazelcastJCacheCustomizationConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[chc.HazelcastInstance:EXISTENCE_CHECK]}
      2) Hint{[osbac.HazelcastJCacheCustomizationConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
      processing hint Hint{[osbac.HazelcastJCacheCustomizationConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[chc.HazelcastInstance:EXISTENCE_CHECK]}
      attempting registration of 0 specific types
      attempting registration of 1 inferred types
      inferred type com.hazelcast.core.HazelcastInstance not found
      attempting registration of 2 elements of annotation chain
      processing hint Hint{[osbac.HazelcastJCacheCustomizationConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
      attempting registration of 0 specific types
      attempting registration of 1 inferred types
      inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
      attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration: [allDeclaredConstructors, allDeclaredMethods]
WARNING: Possible reflection problem later due to (generics related) reference from org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration$HazelcastPropertiesCustomizer org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration.hazelcastPropertiesCustomizer(org.springframework.beans.factory.ObjectProvider) to Type com.hazelcast.core.HazelcastInstance not present
      WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/cache/HazelcastJCacheCustomizationConfiguration = 1 (total methods including @Bean ones:2)
      processing 1 @Bean methods
      hints on method hazelcastPropertiesCustomizer(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/cache/HazelcastJCacheCustomizationConfiguration$HazelcastPropertiesCustomizer;:
[]
      making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
      making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnClass   ANNOTATION
      making this accessible: org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration   ALL
WARNING: Possible reflection problem later due to (generics related) reference from org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration$HazelcastPropertiesCustomizer org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration.hazelcastPropertiesCustomizer(org.springframework.beans.factory.ObjectProvider) to Type com.hazelcast.core.HazelcastInstance not present
      making this accessible: org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration$HazelcastPropertiesCustomizer   EXISTENCE_MC
      making this accessible: java.lang.Object   RESOURCE_CMC
      making this accessible: org.springframework.context.annotation.Bean   ANNOTATION
      making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
        > processType: org/springframework/boot/autoconfigure/cache/HazelcastJCacheCustomizationConfiguration$HazelcastPropertiesCustomizer
        no hints on org/springframework/boot/autoconfigure/cache/HazelcastJCacheCustomizationConfiguration$HazelcastPropertiesCustomizer
Registering reflective access to org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration$HazelcastPropertiesCustomizer: [allDeclaredConstructors, allDeclaredMethods]
        making this accessible: org.springframework.boot.autoconfigure.cache.JCachePropertiesCustomizer   RESOURCE_CMC
        making this accessible: org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration$HazelcastPropertiesCustomizer   RESOURCE_CMC
        making this accessible: java.lang.Object   RESOURCE_CMC
    making this accessible: org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration   ALL
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnClass   ANNOTATION
    making this accessible: org.springframework.context.annotation.Import   ANNOTATION
    making this accessible: org.springframework.beans.factory.Aware   RESOURCE_CMC
    making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
    making this accessible: org.springframework.cache.CacheManager   EXISTENCE_CHECK
    making this accessible: org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration   ALL
WARNING: Possible reflection problem later due to (generics related) reference from org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration$HazelcastPropertiesCustomizer org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration.hazelcastPropertiesCustomizer(org.springframework.beans.factory.ObjectProvider) to Type com.hazelcast.core.HazelcastInstance not present
    making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
    making this accessible: java.lang.Object   RESOURCE_CMC
This is in the constant data, does it need to stay in there? org.springframework.boot.autoconfigure.cache.CacheCondition  (dynamically requested access is RESOURCE_CTORS_ONLY)
    making this accessible: org.springframework.boot.autoconfigure.cache.CacheCondition   RESOURCE_CTORS_ONLY
WARNING: type org.springframework.boot.autoconfigure.cache.CacheCondition being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
    making this accessible: org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheAvailableCondition   RESOURCE_CTORS_ONLY
    making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
    making this accessible: org.springframework.beans.factory.BeanClassLoaderAware   RESOURCE_CMC
    making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
      > processType: org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration$JCacheProviderAvailableCondition
      no hints on org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration$JCacheProviderAvailableCondition
      making this accessible: org.springframework.context.annotation.Condition   RESOURCE_CMC
      making this accessible: java.lang.Object   RESOURCE_CMC
      making this accessible: org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheProviderAvailableCondition   RESOURCE_CTORS_ONLY
      making this accessible: org.springframework.boot.autoconfigure.condition.SpringBootCondition   RESOURCE_CTORS_ONLY
      > processType: org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration$JCacheAvailableCondition
      no hints on org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration$JCacheAvailableCondition
        > processType: org/springframework/boot/autoconfigure/condition/AnyNestedCondition
        no hints on org/springframework/boot/autoconfigure/condition/AnyNestedCondition
          > processType: org/springframework/boot/autoconfigure/condition/AbstractNestedCondition
          no hints on org/springframework/boot/autoconfigure/condition/AbstractNestedCondition
          making this accessible: org.springframework.context.annotation.ConfigurationCondition   RESOURCE_CTORS_ONLY
          making this accessible: org.springframework.boot.autoconfigure.condition.AbstractNestedCondition   RESOURCE_CTORS_ONLY
          making this accessible: org.springframework.context.annotation.Condition   RESOURCE_CMC
          making this accessible: java.lang.Object   RESOURCE_CMC
          making this accessible: org.springframework.boot.autoconfigure.condition.SpringBootCondition   RESOURCE_CTORS_ONLY
            > processType: org/springframework/boot/autoconfigure/condition/AbstractNestedCondition$MemberOutcomes
            no hints on org/springframework/boot/autoconfigure/condition/AbstractNestedCondition$MemberOutcomes
Registering reflective access to org.springframework.boot.autoconfigure.condition.AbstractNestedCondition$MemberOutcomes: [allDeclaredConstructors, allDeclaredMethods]
            making this accessible: java.lang.Object   RESOURCE_CMC
            making this accessible: org.springframework.boot.autoconfigure.condition.AbstractNestedCondition$MemberOutcomes   RESOURCE_CMC
            > processType: org/springframework/boot/autoconfigure/condition/AbstractNestedCondition$MemberConditions
            no hints on org/springframework/boot/autoconfigure/condition/AbstractNestedCondition$MemberConditions
Registering reflective access to org.springframework.boot.autoconfigure.condition.AbstractNestedCondition$MemberConditions: [allDeclaredConstructors, allDeclaredMethods]
            making this accessible: org.springframework.boot.autoconfigure.condition.AbstractNestedCondition$MemberConditions   RESOURCE_CMC
            making this accessible: java.lang.Object   RESOURCE_CMC
            > processType: org/springframework/boot/autoconfigure/condition/AbstractNestedCondition$MemberMatchOutcomes
            no hints on org/springframework/boot/autoconfigure/condition/AbstractNestedCondition$MemberMatchOutcomes
Registering reflective access to org.springframework.boot.autoconfigure.condition.AbstractNestedCondition$MemberMatchOutcomes: [allDeclaredConstructors, allDeclaredMethods]
            making this accessible: org.springframework.boot.autoconfigure.condition.AbstractNestedCondition$MemberMatchOutcomes   RESOURCE_CMC
            making this accessible: java.lang.Object   RESOURCE_CMC
        making this accessible: org.springframework.context.annotation.ConfigurationCondition   RESOURCE_CTORS_ONLY
        making this accessible: org.springframework.boot.autoconfigure.condition.AbstractNestedCondition   RESOURCE_CTORS_ONLY
        making this accessible: org.springframework.context.annotation.Condition   RESOURCE_CMC
        making this accessible: java.lang.Object   RESOURCE_CMC
        making this accessible: org.springframework.boot.autoconfigure.condition.AnyNestedCondition   RESOURCE_CTORS_ONLY
        making this accessible: org.springframework.boot.autoconfigure.condition.SpringBootCondition   RESOURCE_CTORS_ONLY
      making this accessible: org.springframework.context.annotation.ConfigurationCondition   RESOURCE_CTORS_ONLY
      making this accessible: org.springframework.boot.autoconfigure.condition.AbstractNestedCondition   RESOURCE_CTORS_ONLY
      making this accessible: org.springframework.context.annotation.Condition   RESOURCE_CMC
      making this accessible: java.lang.Object   RESOURCE_CMC
      making this accessible: org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheAvailableCondition   RESOURCE_CTORS_ONLY
      making this accessible: org.springframework.boot.autoconfigure.condition.AnyNestedCondition   RESOURCE_CTORS_ONLY
      making this accessible: org.springframework.boot.autoconfigure.condition.SpringBootCondition   RESOURCE_CTORS_ONLY
        > processType: org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration$JCacheAvailableCondition$CustomJCacheCacheManager
        #2 hints on org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration$JCacheAvailableCondition$CustomJCacheCacheManager are: 
        1) Hint{[osbac.JCacheCacheConfiguration$JCacheAvailableCondition$CustomJCacheCacheManager,osbac.ConditionalOnSingleCandidate],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jc.CacheManager:EXISTENCE_CHECK]}
        2) Hint{[osbac.JCacheCacheConfiguration$JCacheAvailableCondition$CustomJCacheCacheManager,osbac.ConditionalOnSingleCandidate,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
        processing hint Hint{[osbac.JCacheCacheConfiguration$JCacheAvailableCondition$CustomJCacheCacheManager,osbac.ConditionalOnSingleCandidate],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jc.CacheManager:EXISTENCE_CHECK]}
        attempting registration of 0 specific types
        attempting registration of 1 inferred types
        inferred type javax.cache.CacheManager not found
        attempting registration of 2 elements of annotation chain
        processing hint Hint{[osbac.JCacheCacheConfiguration$JCacheAvailableCondition$CustomJCacheCacheManager,osbac.ConditionalOnSingleCandidate,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
        attempting registration of 0 specific types
        attempting registration of 1 inferred types
        inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
        attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheAvailableCondition$CustomJCacheCacheManager: [allDeclaredConstructors, allDeclaredMethods]
        making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate   ANNOTATION
        making this accessible: org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheAvailableCondition$CustomJCacheCacheManager   ALL
        making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
        making this accessible: java.lang.Object   RESOURCE_CMC
        making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
        > processType: org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration$JCacheAvailableCondition$JCacheProvider
        #1 hints on org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration$JCacheAvailableCondition$JCacheProvider are: 
        1) Hint{[osbac.JCacheCacheConfiguration$JCacheAvailableCondition$JCacheProvider,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.JCacheCacheConfiguration$JCacheProviderAvailableCondition:RESOURCE_CTORS_ONLY]}
        processing hint Hint{[osbac.JCacheCacheConfiguration$JCacheAvailableCondition$JCacheProvider,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.JCacheCacheConfiguration$JCacheProviderAvailableCondition:RESOURCE_CTORS_ONLY]}
        attempting registration of 0 specific types
        attempting registration of 1 inferred types
        inferred type org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheProviderAvailableCondition found, will get accessibility RESOURCE_CTORS_ONLY
        attempting registration of 2 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheAvailableCondition$JCacheProvider: [allDeclaredConstructors, allDeclaredMethods]
        making this accessible: org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheAvailableCondition$JCacheProvider   ALL
        making this accessible: java.lang.Object   RESOURCE_CMC
        making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
        making this accessible: org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheProviderAvailableCondition   RESOURCE_CTORS_ONLY
    > processType: org/springframework/boot/autoconfigure/cache/CouchbaseCacheConfiguration
    #7 hints on org/springframework/boot/autoconfigure/cache/CouchbaseCacheConfiguration are: 
    1) Hint{[osbac.CouchbaseCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cccj.Bucket:EXISTENCE_CHECK,cccsc.CouchbaseCacheManager:EXISTENCE_CHECK]}
    2) Hint{[osbac.CouchbaseCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    3) Hint{[osbac.CouchbaseCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    4) Hint{[osbac.CouchbaseCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    5) Hint{[osbac.CouchbaseCacheConfiguration,osbac.ConditionalOnSingleCandidate],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cccj.Bucket:EXISTENCE_CHECK]}
    6) Hint{[osbac.CouchbaseCacheConfiguration,osbac.ConditionalOnSingleCandidate,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    7) Hint{[osbac.CouchbaseCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    processing hint Hint{[osbac.CouchbaseCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cccj.Bucket:EXISTENCE_CHECK,cccsc.CouchbaseCacheManager:EXISTENCE_CHECK]}
    attempting registration of 0 specific types
    attempting registration of 2 inferred types
    inferred type com.couchbase.client.java.Bucket not found
    inferred type com.couchbase.client.spring.cache.CouchbaseCacheManager not found
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.CouchbaseCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.CouchbaseCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    attempting registration of 1 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.cache.CacheManager found, will get accessibility EXISTENCE_CHECK
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.CouchbaseCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.CouchbaseCacheConfiguration,osbac.ConditionalOnSingleCandidate],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cccj.Bucket:EXISTENCE_CHECK]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type com.couchbase.client.java.Bucket not found
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.CouchbaseCacheConfiguration,osbac.ConditionalOnSingleCandidate,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.CouchbaseCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.cache.CacheCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 2 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.CouchbaseCacheConfiguration: [allDeclaredConstructors, allDeclaredMethods]
    WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/cache/CouchbaseCacheConfiguration = 1 (total methods including @Bean ones:2)
    processing 1 @Bean methods
    making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnClass   ANNOTATION
    making this accessible: org.springframework.cache.CacheManager   EXISTENCE_CHECK
    making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
    making this accessible: java.lang.Object   RESOURCE_CMC
This is in the constant data, does it need to stay in there? org.springframework.boot.autoconfigure.cache.CacheCondition  (dynamically requested access is RESOURCE_CTORS_ONLY)
    making this accessible: org.springframework.boot.autoconfigure.cache.CacheCondition   RESOURCE_CTORS_ONLY
WARNING: type org.springframework.boot.autoconfigure.cache.CacheCondition being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
    making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.cache.CouchbaseCacheConfiguration   ALL
    making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
    > processType: org/springframework/boot/autoconfigure/cache/RedisCacheConfiguration
    #6 hints on org/springframework/boot/autoconfigure/cache/RedisCacheConfiguration are: 
    1) Hint{[osbac.RedisCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdrc.RedisConnectionFactory:EXISTENCE_CHECK]}
    2) Hint{[osbac.RedisCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    3) Hint{[osbac.RedisCacheConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    4) Hint{[osbac.RedisCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    5) Hint{[osbac.RedisCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    6) Hint{[osbac.RedisCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    processing hint Hint{[osbac.RedisCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdrc.RedisConnectionFactory:EXISTENCE_CHECK]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.data.redis.connection.RedisConnectionFactory not found
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.RedisCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.RedisCacheConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.RedisCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    attempting registration of 1 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.cache.CacheManager found, will get accessibility EXISTENCE_CHECK
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.RedisCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.RedisCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.cache.CacheCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 2 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration: [allDeclaredConstructors, allDeclaredMethods]
    registering 1 @AutoConfigureBefore/After references
    WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/cache/RedisCacheConfiguration = 5 (total methods including @Bean ones:6)
    processing 1 @Bean methods
    making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnBean   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration   EXISTENCE_CHECK
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnClass   ANNOTATION
    making this accessible: org.springframework.cache.CacheManager   EXISTENCE_CHECK
    making this accessible: org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration   ALL
    making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
    making this accessible: java.lang.Object   RESOURCE_CMC
This is in the constant data, does it need to stay in there? org.springframework.boot.autoconfigure.cache.CacheCondition  (dynamically requested access is RESOURCE_CTORS_ONLY)
    making this accessible: org.springframework.boot.autoconfigure.cache.CacheCondition   RESOURCE_CTORS_ONLY
WARNING: type org.springframework.boot.autoconfigure.cache.CacheCondition being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
    making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
    > processType: org/springframework/boot/autoconfigure/cache/CaffeineCacheConfiguration
    #5 hints on org/springframework/boot/autoconfigure/cache/CaffeineCacheConfiguration are: 
    1) Hint{[osbac.CaffeineCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cgbcc.Caffeine:EXISTENCE_CHECK,oscc.CaffeineCacheManager:EXISTENCE_CHECK]}
    2) Hint{[osbac.CaffeineCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    3) Hint{[osbac.CaffeineCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    4) Hint{[osbac.CaffeineCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    5) Hint{[osbac.CaffeineCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    processing hint Hint{[osbac.CaffeineCacheConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cgbcc.Caffeine:EXISTENCE_CHECK,oscc.CaffeineCacheManager:EXISTENCE_CHECK]}
    attempting registration of 0 specific types
    attempting registration of 2 inferred types
    inferred type com.github.benmanes.caffeine.cache.Caffeine not found
    inferred type org.springframework.cache.caffeine.CaffeineCacheManager not found
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.CaffeineCacheConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.CaffeineCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    attempting registration of 1 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.cache.CacheManager found, will get accessibility EXISTENCE_CHECK
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.CaffeineCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.CaffeineCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.cache.CacheCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 2 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration: [allDeclaredConstructors, allDeclaredMethods]
    WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/cache/CaffeineCacheConfiguration = 3 (total methods including @Bean ones:4)
    processing 1 @Bean methods
    making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnClass   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration   ALL
    making this accessible: org.springframework.cache.CacheManager   EXISTENCE_CHECK
    making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
    making this accessible: java.lang.Object   RESOURCE_CMC
This is in the constant data, does it need to stay in there? org.springframework.boot.autoconfigure.cache.CacheCondition  (dynamically requested access is RESOURCE_CTORS_ONLY)
    making this accessible: org.springframework.boot.autoconfigure.cache.CacheCondition   RESOURCE_CTORS_ONLY
WARNING: type org.springframework.boot.autoconfigure.cache.CacheCondition being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
    making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
    > processType: org/springframework/boot/autoconfigure/cache/SimpleCacheConfiguration
    #3 hints on org/springframework/boot/autoconfigure/cache/SimpleCacheConfiguration are: 
    1) Hint{[osbac.SimpleCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    2) Hint{[osbac.SimpleCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    3) Hint{[osbac.SimpleCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    processing hint Hint{[osbac.SimpleCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    attempting registration of 1 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.cache.CacheManager found, will get accessibility EXISTENCE_CHECK
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.SimpleCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.SimpleCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.cache.CacheCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 2 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: [allDeclaredConstructors, allDeclaredMethods]
    WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/cache/SimpleCacheConfiguration = 1 (total methods including @Bean ones:2)
    processing 1 @Bean methods
    hints on method cacheManager(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;)Lorg/springframework/cache/concurrent/ConcurrentMapCacheManager;:
[]
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
    making this accessible: org.springframework.cache.CacheManager   EXISTENCE_CHECK
    making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
    making this accessible: java.lang.Object   RESOURCE_CMC
This is in the constant data, does it need to stay in there? org.springframework.boot.autoconfigure.cache.CacheCondition  (dynamically requested access is RESOURCE_CTORS_ONLY)
    making this accessible: org.springframework.boot.autoconfigure.cache.CacheCondition   RESOURCE_CTORS_ONLY
WARNING: type org.springframework.boot.autoconfigure.cache.CacheCondition being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
    making this accessible: org.springframework.context.annotation.Bean   ANNOTATION
    making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration   ALL
    making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
    making this accessible: org.springframework.cache.concurrent.ConcurrentMapCacheManager   EXISTENCE_MC
    > processType: org/springframework/boot/autoconfigure/cache/NoOpCacheConfiguration
    #3 hints on org/springframework/boot/autoconfigure/cache/NoOpCacheConfiguration are: 
    1) Hint{[osbac.NoOpCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    2) Hint{[osbac.NoOpCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    3) Hint{[osbac.NoOpCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    processing hint Hint{[osbac.NoOpCacheConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osc.CacheManager:EXISTENCE_CHECK]}
    attempting registration of 1 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.cache.CacheManager found, will get accessibility EXISTENCE_CHECK
    attempting registration of 2 elements of annotation chain
    processing hint Hint{[osbac.NoOpCacheConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 3 elements of annotation chain
    processing hint Hint{[osbac.NoOpCacheConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CacheCondition:RESOURCE_CTORS_ONLY]}
    attempting registration of 0 specific types
    attempting registration of 1 inferred types
    inferred type org.springframework.boot.autoconfigure.cache.CacheCondition found, will get accessibility RESOURCE_CTORS_ONLY
    attempting registration of 2 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration: [allDeclaredConstructors, allDeclaredMethods]
    WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/cache/NoOpCacheConfiguration = 1 (total methods including @Bean ones:2)
    processing 1 @Bean methods
    hints on method cacheManager()Lorg/springframework/cache/support/NoOpCacheManager;:
[]
    making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration   ALL
    making this accessible: org.springframework.cache.support.NoOpCacheManager   EXISTENCE_MC
    making this accessible: org.springframework.cache.CacheManager   EXISTENCE_CHECK
    making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
    making this accessible: java.lang.Object   RESOURCE_CMC
This is in the constant data, does it need to stay in there? org.springframework.boot.autoconfigure.cache.CacheCondition  (dynamically requested access is RESOURCE_CTORS_ONLY)
    making this accessible: org.springframework.boot.autoconfigure.cache.CacheCondition   RESOURCE_CTORS_ONLY
WARNING: type org.springframework.boot.autoconfigure.cache.CacheCondition being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
    making this accessible: org.springframework.context.annotation.Bean   ANNOTATION
    making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
    making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
  making this accessible: org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration   ALL
  making this accessible: org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration   ALL
  making this accessible: org.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration   ALL
  making this accessible: org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration   ALL
  making this accessible: org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector   ALL
  making this accessible: org.springframework.beans.factory.Aware   RESOURCE_CMC
  making this accessible: org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration   ALL
  making this accessible: org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration   ALL
  making this accessible: org.springframework.boot.autoconfigure.cache.HazelcastCacheConfiguration   ALL
  making this accessible: org.springframework.boot.autoconfigure.cache.InfinispanCacheConfiguration   ALL
  making this accessible: java.lang.Object   RESOURCE_CMC
  making this accessible: org.springframework.beans.factory.BeanClassLoaderAware   RESOURCE_CMC
  making this accessible: org.springframework.context.annotation.ImportSelector   RESOURCE_CMC
  making this accessible: org.springframework.boot.autoconfigure.cache.CouchbaseCacheConfiguration   ALL
  making this accessible: org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration   ALL
making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnBean   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration   EXISTENCE_CHECK
making this accessible: org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor   ALL
making this accessible: org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration   ALL
making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnClass   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration   EXISTENCE_CHECK
making this accessible: org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector   ALL
making this accessible: org.springframework.context.annotation.Import   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration   EXISTENCE_CHECK
making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
making this accessible: org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator   EXISTENCE_MC
making this accessible: org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration   EXISTENCE_CHECK
making this accessible: org.springframework.cache.CacheManager   EXISTENCE_CHECK
making this accessible: org.springframework.boot.context.properties.EnableConfigurationProperties   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers   EXISTENCE_MC
making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
making this accessible: org.springframework.boot.autoconfigure.cache.CacheProperties   ALL
making this accessible: org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar   ALL
making this accessible: java.lang.Object   RESOURCE_CMC
making this accessible: org.springframework.context.annotation.Bean   ANNOTATION
making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
  > processType: org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator
  no hints on org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator
Registering reflective access to org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator: [allDeclaredConstructors, allDeclaredMethods]
  making this accessible: org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator   RESOURCE_CMC
  making this accessible: java.lang.Object   RESOURCE_CMC
  making this accessible: org.springframework.beans.factory.InitializingBean   RESOURCE_CMC
Configuration type org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration has passed validation


Processing configuration type org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration
> processType: org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration are: 
1) Hint{[osbac.CassandraAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cdodac.CqlSession:EXISTENCE_CHECK]}
2) Hint{[osbac.CassandraAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbac.CassandraAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CassandraProperties:ALL]}
4) Hint{[osbac.CassandraAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbac.CassandraAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cdodac.CqlSession:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type com.datastax.oss.driver.api.core.CqlSession not found
Configuration type org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/context/ConfigurationPropertiesAutoConfiguration
#2 hints on org/springframework/boot/autoconfigure/context/ConfigurationPropertiesAutoConfiguration are: 
1) Hint{[osbac.ConfigurationPropertiesAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[]}
2) Hint{[osbac.ConfigurationPropertiesAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbac.ConfigurationPropertiesAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[]}
attempting registration of 0 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbac.ConfigurationPropertiesAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration: [allDeclaredConstructors, allDeclaredMethods]
WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/context/ConfigurationPropertiesAutoConfiguration = 1 (total methods including @Bean ones:1)
  > processType: org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
  no hints on org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
Registering reflective access to org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar: [allDeclaredConstructors, allDeclaredMethods]
  making this accessible: org.springframework.context.annotation.ImportBeanDefinitionRegistrar   RESOURCE_CMC
  making this accessible: org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar   RESOURCE_CMC
  making this accessible: java.lang.Object   RESOURCE_CMC
making this accessible: org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration   ALL
making this accessible: org.springframework.boot.context.properties.EnableConfigurationProperties   ANNOTATION
making this accessible: org.springframework.context.annotation.Import   ANNOTATION
making this accessible: org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar   ALL
making this accessible: java.lang.Object   RESOURCE_CMC
Configuration type org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration has passed validation


Processing configuration type org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration
> processType: org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration are: 
1) Hint{[osbac.MessageSourceAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}
2) Hint{[osbac.MessageSourceAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbac.MessageSourceAutoConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.MessageSourceAutoConfiguration$ResourceBundleCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbac.MessageSourceAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[]}
5) Hint{[osbac.MessageSourceAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbac.MessageSourceAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}
attempting registration of 1 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbac.MessageSourceAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbac.MessageSourceAutoConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.MessageSourceAutoConfiguration$ResourceBundleCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbac.MessageSourceAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[]}
attempting registration of 0 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbac.MessageSourceAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration: [allDeclaredConstructors, allDeclaredMethods]
WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration = 3 (total methods including @Bean ones:5)
processing 2 @Bean methods
hints on method messageSourceProperties()Lorg/springframework/boot/autoconfigure/context/MessageSourceProperties;:
[]
hints on method messageSource(Lorg/springframework/boot/autoconfigure/context/MessageSourceProperties;)Lorg/springframework/context/MessageSource;:
[]
  > processType: org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
  no hints on org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
Registering reflective access to org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar: [allDeclaredConstructors, allDeclaredMethods]
  making this accessible: org.springframework.context.annotation.ImportBeanDefinitionRegistrar   RESOURCE_CMC
  making this accessible: org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar   RESOURCE_CMC
  making this accessible: java.lang.Object   RESOURCE_CMC
making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
making this accessible: org.springframework.context.annotation.Import   ANNOTATION
This is in the constant data, does it need to stay in there? org.springframework.boot.context.properties.ConfigurationProperties  (dynamically requested access is ANNOTATION)
making this accessible: org.springframework.boot.context.properties.ConfigurationProperties   ANNOTATION
WARNING: type org.springframework.boot.context.properties.ConfigurationProperties being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
making this accessible: org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration   ALL
making this accessible: org.springframework.boot.context.properties.EnableConfigurationProperties   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
making this accessible: org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar   ALL
making this accessible: java.lang.Object   RESOURCE_CMC
making this accessible: org.springframework.context.annotation.Bean   ANNOTATION
making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition   RESOURCE_CTORS_ONLY
making this accessible: org.springframework.boot.autoconfigure.context.MessageSourceProperties   EXISTENCE_MC
making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
making this accessible: org.springframework.context.MessageSource   EXISTENCE_MC
  > processType: org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration$ResourceBundleCondition
  no hints on org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration$ResourceBundleCondition
    > processType: org/springframework/boot/autoconfigure/condition/SpringBootCondition
    no hints on org/springframework/boot/autoconfigure/condition/SpringBootCondition
    making this accessible: org.springframework.context.annotation.Condition   RESOURCE_CMC
    making this accessible: java.lang.Object   RESOURCE_CMC
    making this accessible: org.springframework.boot.autoconfigure.condition.SpringBootCondition   RESOURCE_CTORS_ONLY
  making this accessible: org.springframework.context.annotation.Condition   RESOURCE_CMC
  making this accessible: java.lang.Object   RESOURCE_CMC
  making this accessible: org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition   RESOURCE_CTORS_ONLY
  making this accessible: org.springframework.boot.autoconfigure.condition.SpringBootCondition   RESOURCE_CTORS_ONLY
Configuration type org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration has passed validation


Processing configuration type org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration
> processType: org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration
no hints on org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration
Registering reflective access to org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration: [allDeclaredConstructors, allDeclaredMethods]
WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration = 1 (total methods including @Bean ones:2)
processing 1 @Bean methods
hints on method propertySourcesPlaceholderConfigurer()Lorg/springframework/context/support/PropertySourcesPlaceholderConfigurer;:
[Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}, Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}]
processing hint Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}
attempting registration of 1 specific types
attempting registration of 0 inferred types
attempting registration of 1 elements of annotation chain
processing hint Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY (whilst processing @Bean method propertySourcesPlaceholderConfigurer()Lorg/springframework/context/support/PropertySourcesPlaceholderConfigurer;)
attempting registration of 2 elements of annotation chain
making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration   RESOURCE_CMC
This is in the constant data, does it need to stay in there? org.springframework.context.support.PropertySourcesPlaceholderConfigurer  (dynamically requested access is EXISTENCE_MC)
making this accessible: org.springframework.context.support.PropertySourcesPlaceholderConfigurer   EXISTENCE_MC
WARNING: type org.springframework.context.support.PropertySourcesPlaceholderConfigurer being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
making this accessible: java.lang.Object   RESOURCE_CMC
making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
making this accessible: org.springframework.context.annotation.Bean   ANNOTATION
making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
Configuration type org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration has passed validation


Processing configuration type org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration
> processType: org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration are: 
1) Hint{[osbac.CouchbaseAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cccj.CouchbaseBucket:EXISTENCE_CHECK,cccj.Cluster:EXISTENCE_CHECK]}
2) Hint{[osbac.CouchbaseAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbac.CouchbaseAutoConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CouchbaseAutoConfiguration$CouchbaseCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbac.CouchbaseAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CouchbaseProperties:ALL]}
5) Hint{[osbac.CouchbaseAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbac.CouchbaseAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cccj.CouchbaseBucket:EXISTENCE_CHECK,cccj.Cluster:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type com.couchbase.client.java.CouchbaseBucket not found
Configuration type org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration
> processType: org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration
#2 hints on org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration are: 
1) Hint{[osbad.PersistenceExceptionTranslationAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osda.PersistenceExceptionTranslationPostProcessor:EXISTENCE_CHECK]}
2) Hint{[osbad.PersistenceExceptionTranslationAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbad.PersistenceExceptionTranslationAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osda.PersistenceExceptionTranslationPostProcessor:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor not found
Configuration type org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration
#3 hints on org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration are: 
1) Hint{[osbadc.CassandraDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdcc.CassandraAdminOperations:EXISTENCE_CHECK,cdodac.CqlSession:EXISTENCE_CHECK]}
2) Hint{[osbadc.CassandraDataAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadc.CassandraDataAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbadc.CassandraDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdcc.CassandraAdminOperations:EXISTENCE_CHECK,cdodac.CqlSession:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.data.cassandra.core.CassandraAdminOperations not found
Configuration type org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/cassandra/CassandraReactiveDataAutoConfiguration
#3 hints on org/springframework/boot/autoconfigure/data/cassandra/CassandraReactiveDataAutoConfiguration are: 
1) Hint{[osbadc.CassandraReactiveDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,cdodac.CqlSession:EXISTENCE_CHECK,osdcc.ReactiveCassandraTemplate:EXISTENCE_CHECK]}
2) Hint{[osbadc.CassandraReactiveDataAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadc.CassandraReactiveDataAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbadc.CassandraReactiveDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,cdodac.CqlSession:EXISTENCE_CHECK,osdcc.ReactiveCassandraTemplate:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type reactor.core.publisher.Flux not found
Configuration type org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/cassandra/CassandraReactiveRepositoriesAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/data/cassandra/CassandraReactiveRepositoriesAutoConfiguration are: 
1) Hint{[osbadc.CassandraReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdc.ReactiveSession:EXISTENCE_CHECK,osdcr.ReactiveCassandraRepository:EXISTENCE_CHECK]}
2) Hint{[osbadc.CassandraReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadc.CassandraReactiveRepositoriesAutoConfiguration,osbad.ConditionalOnRepositoryType,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbad.OnRepositoryTypeCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbadc.CassandraReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdcrs.ReactiveCassandraRepositoryFactoryBean:EXISTENCE_CHECK]}
5) Hint{[osbadc.CassandraReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbadc.CassandraReactiveRepositoriesAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadc.CassandraReactiveRepositoriesRegistrar:ALL]}
processing hint Hint{[osbadc.CassandraReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdc.ReactiveSession:EXISTENCE_CHECK,osdcr.ReactiveCassandraRepository:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.data.cassandra.ReactiveSession not found
Configuration type org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/cassandra/CassandraRepositoriesAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/data/cassandra/CassandraRepositoriesAutoConfiguration are: 
1) Hint{[osbadc.CassandraRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdcr.CassandraRepository:EXISTENCE_CHECK,cdodac.CqlSession:EXISTENCE_CHECK]}
2) Hint{[osbadc.CassandraRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadc.CassandraRepositoriesAutoConfiguration,osbad.ConditionalOnRepositoryType,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbad.OnRepositoryTypeCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbadc.CassandraRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdcrs.CassandraRepositoryFactoryBean:EXISTENCE_CHECK]}
5) Hint{[osbadc.CassandraRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbadc.CassandraRepositoriesAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadc.CassandraRepositoriesRegistrar:ALL]}
processing hint Hint{[osbadc.CassandraRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdcr.CassandraRepository:EXISTENCE_CHECK,cdodac.CqlSession:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.data.cassandra.repository.CassandraRepository not found
Configuration type org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/couchbase/CouchbaseDataAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/data/couchbase/CouchbaseDataAutoConfiguration are: 
1) Hint{[osbadc.CouchbaseDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cccj.Bucket:EXISTENCE_CHECK,osdcr.CouchbaseRepository:EXISTENCE_CHECK]}
2) Hint{[osbadc.CouchbaseDataAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadc.CouchbaseDataAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbadc.CouchbaseDataProperties:ALL]}
4) Hint{[osbadc.CouchbaseDataAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbadc.CouchbaseDataAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadc.SpringBootCouchbaseDataConfiguration:ALL,osbadc.CouchbaseConfigurerAdapterConfiguration:ALL]}
processing hint Hint{[osbadc.CouchbaseDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cccj.Bucket:EXISTENCE_CHECK,osdcr.CouchbaseRepository:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type com.couchbase.client.java.Bucket not found
Configuration type org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveDataAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/couchbase/CouchbaseReactiveDataAutoConfiguration
#3 hints on org/springframework/boot/autoconfigure/data/couchbase/CouchbaseReactiveDataAutoConfiguration are: 
1) Hint{[osbadc.CouchbaseReactiveDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,cccj.Bucket:EXISTENCE_CHECK,osdcr.ReactiveCouchbaseRepository:EXISTENCE_CHECK]}
2) Hint{[osbadc.CouchbaseReactiveDataAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadc.CouchbaseReactiveDataAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadc.SpringBootCouchbaseReactiveDataConfiguration:ALL]}
processing hint Hint{[osbadc.CouchbaseReactiveDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,cccj.Bucket:EXISTENCE_CHECK,osdcr.ReactiveCouchbaseRepository:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type reactor.core.publisher.Flux not found
Configuration type org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveDataAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveDataAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/couchbase/CouchbaseReactiveRepositoriesAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/data/couchbase/CouchbaseReactiveRepositoriesAutoConfiguration are: 
1) Hint{[osbadc.CouchbaseReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,cccj.Bucket:EXISTENCE_CHECK,osdcr.ReactiveCouchbaseRepository:EXISTENCE_CHECK]}
2) Hint{[osbadc.CouchbaseReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadc.CouchbaseReactiveRepositoriesAutoConfiguration,osbad.ConditionalOnRepositoryType,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbad.OnRepositoryTypeCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbadc.CouchbaseReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbadc.CouchbaseReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdcrs.ReactiveCouchbaseRepositoryFactoryBean:EXISTENCE_CHECK]}
6) Hint{[osbadc.CouchbaseReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
7) Hint{[osbadc.CouchbaseReactiveRepositoriesAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadc.CouchbaseReactiveRepositoriesRegistrar:ALL]}
processing hint Hint{[osbadc.CouchbaseReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,cccj.Bucket:EXISTENCE_CHECK,osdcr.ReactiveCouchbaseRepository:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type reactor.core.publisher.Flux not found
Configuration type org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/couchbase/CouchbaseRepositoriesAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/data/couchbase/CouchbaseRepositoriesAutoConfiguration are: 
1) Hint{[osbadc.CouchbaseRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cccj.Bucket:EXISTENCE_CHECK,osdcr.CouchbaseRepository:EXISTENCE_CHECK]}
2) Hint{[osbadc.CouchbaseRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadc.CouchbaseRepositoriesAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbadc.CouchbaseRepositoriesAutoConfiguration,osbad.ConditionalOnRepositoryType,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbad.OnRepositoryTypeCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbadc.CouchbaseRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdcrs.CouchbaseRepositoryFactoryBean:EXISTENCE_CHECK]}
6) Hint{[osbadc.CouchbaseRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
7) Hint{[osbadc.CouchbaseRepositoriesAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadc.CouchbaseRepositoriesRegistrar:ALL]}
processing hint Hint{[osbadc.CouchbaseRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cccj.Bucket:EXISTENCE_CHECK,osdcr.CouchbaseRepository:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type com.couchbase.client.java.Bucket not found
Configuration type org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchDataAutoConfiguration
#3 hints on org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchDataAutoConfiguration are: 
1) Hint{[osbade.ElasticsearchDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdec.ElasticsearchTemplate:EXISTENCE_CHECK]}
2) Hint{[osbade.ElasticsearchDataAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbade.ElasticsearchDataAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbade.ElasticsearchDataConfiguration$RestClientConfiguration:ALL,osbade.ElasticsearchDataConfiguration$BaseConfiguration:ALL,osbade.ElasticsearchDataConfiguration$ReactiveRestClientConfiguration:ALL]}
processing hint Hint{[osbade.ElasticsearchDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdec.ElasticsearchTemplate:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.data.elasticsearch.core.ElasticsearchTemplate not found
Configuration type org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration are: 
1) Hint{[osbade.ElasticsearchRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oec.Client:EXISTENCE_CHECK,osder.ElasticsearchRepository:EXISTENCE_CHECK]}
2) Hint{[osbade.ElasticsearchRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbade.ElasticsearchRepositoriesAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbade.ElasticsearchRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osders.ElasticsearchRepositoryFactoryBean:EXISTENCE_CHECK]}
5) Hint{[osbade.ElasticsearchRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbade.ElasticsearchRepositoriesAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbade.ElasticsearchRepositoriesRegistrar:ALL]}
processing hint Hint{[osbade.ElasticsearchRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oec.Client:EXISTENCE_CHECK,osder.ElasticsearchRepository:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.elasticsearch.client.Client not found
Configuration type org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/elasticsearch/ReactiveElasticsearchRepositoriesAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/data/elasticsearch/ReactiveElasticsearchRepositoriesAutoConfiguration are: 
1) Hint{[osbade.ReactiveElasticsearchRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osder.ReactiveElasticsearchRepository:EXISTENCE_CHECK,osdecr.ReactiveElasticsearchClient:EXISTENCE_CHECK]}
2) Hint{[osbade.ReactiveElasticsearchRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbade.ReactiveElasticsearchRepositoriesAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbade.ReactiveElasticsearchRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osders.ReactiveElasticsearchRepositoryFactoryBean:EXISTENCE_CHECK]}
5) Hint{[osbade.ReactiveElasticsearchRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbade.ReactiveElasticsearchRepositoriesAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbade.ReactiveElasticsearchRepositoriesRegistrar:ALL]}
processing hint Hint{[osbade.ReactiveElasticsearchRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osder.ReactiveElasticsearchRepository:EXISTENCE_CHECK,osdecr.ReactiveElasticsearchClient:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository not found
Configuration type org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveRestClientAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/elasticsearch/ReactiveRestClientAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/data/elasticsearch/ReactiveRestClientAutoConfiguration are: 
1) Hint{[osbade.ReactiveRestClientAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdecr.ReactiveRestClients:EXISTENCE_CHECK,oswrfc.WebClient:EXISTENCE_CHECK,rnhc.HttpClient:EXISTENCE_CHECK]}
2) Hint{[osbade.ReactiveRestClientAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbade.ReactiveRestClientAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbade.ReactiveRestClientProperties:ALL]}
4) Hint{[osbade.ReactiveRestClientAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbade.ReactiveRestClientAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdecr.ReactiveRestClients:EXISTENCE_CHECK,oswrfc.WebClient:EXISTENCE_CHECK,rnhc.HttpClient:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type org.springframework.data.elasticsearch.client.reactive.ReactiveRestClients not found
Configuration type org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveRestClientAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveRestClientAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/jdbc/JdbcRepositoriesAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/data/jdbc/JdbcRepositoriesAutoConfiguration are: 
1) Hint{[osbadj.JdbcRepositoriesAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
2) Hint{[osbadj.JdbcRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdjrc.AbstractJdbcConfiguration:EXISTENCE_CHECK,osjcn.NamedParameterJdbcOperations:EXISTENCE_CHECK]}
3) Hint{[osbadj.JdbcRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbadj.JdbcRepositoriesAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbadj.JdbcRepositoriesAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbadj.JdbcRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdjrc.AbstractJdbcConfiguration:EXISTENCE_CHECK,osjcn.NamedParameterJdbcOperations:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration not found
Configuration type org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration are: 
1) Hint{[osbadj.JpaRepositoriesAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
2) Hint{[osbadj.JpaRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdjr.JpaRepository:EXISTENCE_CHECK]}
3) Hint{[osbadj.JpaRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbadj.JpaRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdjrs.JpaRepositoryFactoryBean:EXISTENCE_CHECK,osdjrc.JpaRepositoryConfigExtension:EXISTENCE_CHECK]}
5) Hint{[osbadj.JpaRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbadj.JpaRepositoriesAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
7) Hint{[osbadj.JpaRepositoriesAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadj.JpaRepositoriesRegistrar:ALL]}
processing hint Hint{[osbadj.JpaRepositoriesAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbadj.JpaRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdjr.JpaRepository:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.data.jpa.repository.JpaRepository not found
Configuration type org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/ldap/LdapRepositoriesAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/data/ldap/LdapRepositoriesAutoConfiguration are: 
1) Hint{[osbadl.LdapRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jnl.LdapContext:EXISTENCE_CHECK,osdlr.LdapRepository:EXISTENCE_CHECK]}
2) Hint{[osbadl.LdapRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadl.LdapRepositoriesAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbadl.LdapRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdlrs.LdapRepositoryFactoryBean:EXISTENCE_CHECK]}
5) Hint{[osbadl.LdapRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbadl.LdapRepositoriesAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadl.LdapRepositoriesRegistrar:ALL]}
processing hint Hint{[osbadl.LdapRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jnl.LdapContext:EXISTENCE_CHECK,osdlr.LdapRepository:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type javax.naming.ldap.LdapContext found, will get accessibility EXISTENCE_CHECK
inferred type org.springframework.data.ldap.repository.LdapRepository not found
Configuration type org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration are: 
1) Hint{[osbadm.MongoDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cmc.MongoClient:EXISTENCE_CHECK,cm.MongoClient:EXISTENCE_CHECK,osdmc.MongoTemplate:EXISTENCE_CHECK]}
2) Hint{[osbadm.MongoDataAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadm.MongoDataAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbam.MongoProperties:ALL]}
4) Hint{[osbadm.MongoDataAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbadm.MongoDataAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadm.MongoDbFactoryDependentConfiguration:ALL,osbadm.MongoDataConfiguration:ALL,osbadm.MongoDbFactoryConfiguration:ALL]}
processing hint Hint{[osbadm.MongoDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cmc.MongoClient:EXISTENCE_CHECK,cm.MongoClient:EXISTENCE_CHECK,osdmc.MongoTemplate:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type com.mongodb.client.MongoClient not found
Configuration type org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/mongo/MongoReactiveDataAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/data/mongo/MongoReactiveDataAutoConfiguration are: 
1) Hint{[osbadm.MongoReactiveDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdmc.ReactiveMongoTemplate:EXISTENCE_CHECK,cmrc.MongoClient:EXISTENCE_CHECK]}
2) Hint{[osbadm.MongoReactiveDataAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadm.MongoReactiveDataAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbadm.MongoReactiveDataAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbam.MongoProperties:ALL]}
5) Hint{[osbadm.MongoReactiveDataAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
6) Hint{[osbadm.MongoReactiveDataAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadm.MongoDataConfiguration:ALL]}
processing hint Hint{[osbadm.MongoReactiveDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdmc.ReactiveMongoTemplate:EXISTENCE_CHECK,cmrc.MongoClient:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.data.mongodb.core.ReactiveMongoTemplate not found
Configuration type org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/mongo/MongoReactiveRepositoriesAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/data/mongo/MongoReactiveRepositoriesAutoConfiguration are: 
1) Hint{[osbadm.MongoReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdmr.ReactiveMongoRepository:EXISTENCE_CHECK,cmrc.MongoClient:EXISTENCE_CHECK]}
2) Hint{[osbadm.MongoReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadm.MongoReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdmrc.ReactiveMongoRepositoryConfigurationExtension:EXISTENCE_CHECK,osdmrs.ReactiveMongoRepositoryFactoryBean:EXISTENCE_CHECK]}
4) Hint{[osbadm.MongoReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbadm.MongoReactiveRepositoriesAutoConfiguration,osbad.ConditionalOnRepositoryType,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbad.OnRepositoryTypeCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbadm.MongoReactiveRepositoriesAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadm.MongoReactiveRepositoriesRegistrar:ALL]}
processing hint Hint{[osbadm.MongoReactiveRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdmr.ReactiveMongoRepository:EXISTENCE_CHECK,cmrc.MongoClient:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.data.mongodb.repository.ReactiveMongoRepository not found
Configuration type org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration are: 
1) Hint{[osbadm.MongoRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cm.MongoClient:EXISTENCE_CHECK,osdmr.MongoRepository:EXISTENCE_CHECK]}
2) Hint{[osbadm.MongoRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadm.MongoRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdmrs.MongoRepositoryFactoryBean:EXISTENCE_CHECK,osdmrc.MongoRepositoryConfigurationExtension:EXISTENCE_CHECK]}
4) Hint{[osbadm.MongoRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbadm.MongoRepositoriesAutoConfiguration,osbad.ConditionalOnRepositoryType,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbad.OnRepositoryTypeCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbadm.MongoRepositoriesAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadm.MongoRepositoriesRegistrar:ALL]}
processing hint Hint{[osbadm.MongoRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cm.MongoClient:EXISTENCE_CHECK,osdmr.MongoRepository:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type com.mongodb.MongoClient not found
Configuration type org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration are: 
1) Hint{[osbadn.Neo4jDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ost.PlatformTransactionManager:EXISTENCE_CHECK,onos.SessionFactory:EXISTENCE_CHECK,osdnt.Neo4jTransactionManager:EXISTENCE_CHECK]}
2) Hint{[osbadn.Neo4jDataAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadn.Neo4jDataAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbadn.Neo4jProperties:ALL]}
4) Hint{[osbadn.Neo4jDataAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbadn.Neo4jDataAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadn.Neo4jBookmarkManagementConfiguration:ALL]}
processing hint Hint{[osbadn.Neo4jDataAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ost.PlatformTransactionManager:EXISTENCE_CHECK,onos.SessionFactory:EXISTENCE_CHECK,osdnt.Neo4jTransactionManager:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type org.springframework.transaction.PlatformTransactionManager not found
Configuration type org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfiguration are: 
1) Hint{[osbadn.Neo4jRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdnr.Neo4jRepository:EXISTENCE_CHECK,onos.Neo4jSession:EXISTENCE_CHECK]}
2) Hint{[osbadn.Neo4jRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadn.Neo4jRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdnrc.Neo4jRepositoryConfigurationExtension:EXISTENCE_CHECK,osdnrs.Neo4jRepositoryFactoryBean:EXISTENCE_CHECK]}
4) Hint{[osbadn.Neo4jRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbadn.Neo4jRepositoriesAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbadn.Neo4jRepositoriesAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadn.Neo4jRepositoriesRegistrar:ALL]}
processing hint Hint{[osbadn.Neo4jRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdnr.Neo4jRepository:EXISTENCE_CHECK,onos.Neo4jSession:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.data.neo4j.repository.Neo4jRepository not found
Configuration type org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/solr/SolrRepositoriesAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/data/solr/SolrRepositoriesAutoConfiguration are: 
1) Hint{[osbads.SolrRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdsr.SolrRepository:EXISTENCE_CHECK,oascs.SolrClient:EXISTENCE_CHECK]}
2) Hint{[osbads.SolrRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbads.SolrRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdsrs.SolrRepositoryFactoryBean:EXISTENCE_CHECK,osdsrc.SolrRepositoryConfigExtension:EXISTENCE_CHECK]}
4) Hint{[osbads.SolrRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbads.SolrRepositoriesAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbads.SolrRepositoriesAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbads.SolrRepositoriesRegistrar:ALL]}
processing hint Hint{[osbads.SolrRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdsr.SolrRepository:EXISTENCE_CHECK,oascs.SolrClient:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.data.solr.repository.SolrRepository not found
Configuration type org.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration are: 
1) Hint{[osbadr.RedisAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdrc.RedisOperations:EXISTENCE_CHECK]}
2) Hint{[osbadr.RedisAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadr.RedisAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbadr.RedisProperties:ALL]}
4) Hint{[osbadr.RedisAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbadr.RedisAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadr.JedisConnectionConfiguration:ALL,osbadr.LettuceConnectionConfiguration:ALL]}
processing hint Hint{[osbadr.RedisAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdrc.RedisOperations:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.data.redis.core.RedisOperations not found
Configuration type org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/redis/RedisReactiveAutoConfiguration
#2 hints on org/springframework/boot/autoconfigure/data/redis/RedisReactiveAutoConfiguration are: 
1) Hint{[osbadr.RedisReactiveAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,osdrc.ReactiveRedisTemplate:EXISTENCE_CHECK,osdrc.ReactiveRedisConnectionFactory:EXISTENCE_CHECK]}
2) Hint{[osbadr.RedisReactiveAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbadr.RedisReactiveAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,osdrc.ReactiveRedisTemplate:EXISTENCE_CHECK,osdrc.ReactiveRedisConnectionFactory:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type reactor.core.publisher.Flux not found
Configuration type org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/redis/RedisRepositoriesAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/data/redis/RedisRepositoriesAutoConfiguration are: 
1) Hint{[osbadr.RedisRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdrrc.EnableRedisRepositories:EXISTENCE_CHECK]}
2) Hint{[osbadr.RedisRepositoriesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadr.RedisRepositoriesAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbadr.RedisRepositoriesAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbadr.RedisRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdrrs.RedisRepositoryFactoryBean:EXISTENCE_CHECK]}
6) Hint{[osbadr.RedisRepositoriesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
7) Hint{[osbadr.RedisRepositoriesAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbadr.RedisRepositoriesRegistrar:ALL]}
processing hint Hint{[osbadr.RedisRepositoriesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdrrc.EnableRedisRepositories:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.data.redis.repository.configuration.EnableRedisRepositories not found
Configuration type org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfiguration
#9 hints on org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfiguration are: 
1) Hint{[osbadr.RepositoryRestMvcAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
2) Hint{[osbadr.RepositoryRestMvcAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadr.RepositoryRestMvcAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdrwc.RepositoryRestMvcConfiguration:EXISTENCE_CHECK]}
4) Hint{[osbadr.RepositoryRestMvcAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbadr.RepositoryRestMvcAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdrwc.RepositoryRestMvcConfiguration:EXISTENCE_CHECK]}
6) Hint{[osbadr.RepositoryRestMvcAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
7) Hint{[osbadr.RepositoryRestMvcAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbadr.RepositoryRestProperties:ALL]}
8) Hint{[osbadr.RepositoryRestMvcAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
9) Hint{[osbadr.RepositoryRestMvcAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osdrwc.RepositoryRestMvcConfiguration:ALL]}
processing hint Hint{[osbadr.RepositoryRestMvcAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
attempting registration of 2 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbadr.RepositoryRestMvcAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbadr.RepositoryRestMvcAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdrwc.RepositoryRestMvcConfiguration:EXISTENCE_CHECK]}
attempting registration of 1 specific types
attempting registration of 1 inferred types
inferred type org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration not found
Configuration type org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration
> processType: org/springframework/boot/autoconfigure/data/web/SpringDataWebAutoConfiguration
for org/springframework/boot/autoconfigure/data/web/SpringDataWebAutoConfiguration missing annotation types are [Lorg.springframework.data.web.config.EnableSpringDataWebSupport]
Couldn't resolve Lorg/springframework/data/web/config/EnableSpringDataWebSupport; annotation type whilst searching for hints on org/springframework/boot/autoconfigure/data/web/SpringDataWebAutoConfiguration
#8 hints on org/springframework/boot/autoconfigure/data/web/SpringDataWebAutoConfiguration are: 
1) Hint{[osbadw.SpringDataWebAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
2) Hint{[osbadw.SpringDataWebAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbadw.SpringDataWebAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdw.PageableHandlerMethodArgumentResolver:EXISTENCE_CHECK,oswsca.WebMvcConfigurer:EXISTENCE_CHECK]}
4) Hint{[osbadw.SpringDataWebAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbadw.SpringDataWebAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osdw.PageableHandlerMethodArgumentResolver:EXISTENCE_CHECK]}
6) Hint{[osbadw.SpringDataWebAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
7) Hint{[osbadw.SpringDataWebAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbadw.SpringDataWebProperties:ALL]}
8) Hint{[osbadw.SpringDataWebAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbadw.SpringDataWebAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
attempting registration of 2 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbadw.SpringDataWebAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbadw.SpringDataWebAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osdw.PageableHandlerMethodArgumentResolver:EXISTENCE_CHECK,oswsca.WebMvcConfigurer:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.data.web.PageableHandlerMethodArgumentResolver not found
Configuration type org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientAutoConfiguration
> processType: org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientAutoConfiguration are: 
1) Hint{[osbaer.RestClientAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oec.RestClient:EXISTENCE_CHECK]}
2) Hint{[osbaer.RestClientAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaer.RestClientAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaer.RestClientProperties:ALL]}
4) Hint{[osbaer.RestClientAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbaer.RestClientAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbaer.RestClientConfigurations$RestClientBuilderConfiguration:ALL,osbaer.RestClientConfigurations$RestHighLevelClientConfiguration:ALL,osbaer.RestClientConfigurations$RestClientFallbackConfiguration:ALL]}
processing hint Hint{[osbaer.RestClientAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oec.RestClient:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.elasticsearch.client.RestClient not found
Configuration type org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration
> processType: org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration are: 
1) Hint{[osbaf.FlywayAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ofc.Flyway:EXISTENCE_CHECK]}
2) Hint{[osbaf.FlywayAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaf.FlywayAutoConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaf.FlywayAutoConfiguration$FlywayDataSourceCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbaf.FlywayAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbaf.FlywayAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbaf.FlywayAutoConfiguration$FlywayNamedParameterJdbcOperationsDependencyConfiguration:ALL,osbaf.FlywayAutoConfiguration$FlywayEntityManagerFactoryDependsOnPostProcessor:ALL,osbaf.FlywayAutoConfiguration$FlywayJdbcOperationsDependsOnPostProcessor:ALL]}
processing hint Hint{[osbaf.FlywayAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ofc.Flyway:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.flywaydb.core.Flyway not found
Configuration type org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration
> processType: org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration are: 
1) Hint{[osbaf.FreeMarkerAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ft.Configuration:EXISTENCE_CHECK,osuf.FreeMarkerConfigurationFactory:EXISTENCE_CHECK]}
2) Hint{[osbaf.FreeMarkerAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaf.FreeMarkerAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaf.FreeMarkerProperties:ALL]}
4) Hint{[osbaf.FreeMarkerAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbaf.FreeMarkerAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbaf.FreeMarkerServletWebConfiguration:ALL,osbaf.FreeMarkerReactiveWebConfiguration:ALL,osbaf.FreeMarkerNonWebConfiguration:ALL]}
processing hint Hint{[osbaf.FreeMarkerAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ft.Configuration:EXISTENCE_CHECK,osuf.FreeMarkerConfigurationFactory:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type freemarker.template.Configuration not found
Configuration type org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration
> processType: org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration are: 
1) Hint{[osbag.GsonAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cgg.Gson:EXISTENCE_CHECK]}
2) Hint{[osbag.GsonAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbag.GsonAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbag.GsonProperties:ALL]}
4) Hint{[osbag.GsonAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbag.GsonAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cgg.Gson:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type com.google.gson.Gson not found
Configuration type org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration
> processType: org/springframework/boot/autoconfigure/h2/H2ConsoleAutoConfiguration
skipping org/springframework/boot/autoconfigure/h2/H2ConsoleAutoConfiguration due to ConditionalOnPropertyCheck
no hints on org/springframework/boot/autoconfigure/h2/H2ConsoleAutoConfiguration
Configuration type org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration
> processType: org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration are: 
1) Hint{[osbah.HypermediaAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ospc.Plugin:EXISTENCE_CHECK,osh.EntityModel:EXISTENCE_CHECK,oswba.RequestMapping:EXISTENCE_CHECK,oswsmma.RequestMappingHandlerAdapter:EXISTENCE_CHECK]}
2) Hint{[osbah.HypermediaAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbah.HypermediaAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
4) Hint{[osbah.HypermediaAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbah.HypermediaAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbah.HateoasProperties:ALL]}
6) Hint{[osbah.HypermediaAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
7) Hint{[osbah.HypermediaAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbah.HypermediaHttpMessageConverterConfiguration:ALL]}
processing hint Hint{[osbah.HypermediaAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ospc.Plugin:EXISTENCE_CHECK,osh.EntityModel:EXISTENCE_CHECK,oswba.RequestMapping:EXISTENCE_CHECK,oswsmma.RequestMappingHandlerAdapter:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 4 inferred types
inferred type org.springframework.plugin.core.Plugin not found
Configuration type org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration
> processType: org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfiguration are: 
1) Hint{[osbah.HazelcastAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[chc.HazelcastInstance:EXISTENCE_CHECK]}
2) Hint{[osbah.HazelcastAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbah.HazelcastAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbah.HazelcastProperties:ALL]}
4) Hint{[osbah.HazelcastAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbah.HazelcastAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbah.HazelcastClientConfiguration:ALL,osbah.HazelcastServerConfiguration:ALL]}
processing hint Hint{[osbah.HazelcastAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[chc.HazelcastInstance:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type com.hazelcast.core.HazelcastInstance not found
Configuration type org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration
> processType: org/springframework/boot/autoconfigure/hazelcast/HazelcastJpaDependencyAutoConfiguration
#3 hints on org/springframework/boot/autoconfigure/hazelcast/HazelcastJpaDependencyAutoConfiguration are: 
1) Hint{[osbah.HazelcastJpaDependencyAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[chc.HazelcastInstance:EXISTENCE_CHECK,osoj.LocalContainerEntityManagerFactoryBean:EXISTENCE_CHECK]}
2) Hint{[osbah.HazelcastJpaDependencyAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbah.HazelcastJpaDependencyAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbah.HazelcastJpaDependencyAutoConfiguration$HazelcastInstanceEntityManagerFactoryDependsOnPostProcessor:ALL]}
processing hint Hint{[osbah.HazelcastJpaDependencyAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[chc.HazelcastInstance:EXISTENCE_CHECK,osoj.LocalContainerEntityManagerFactoryBean:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type com.hazelcast.core.HazelcastInstance not found
Configuration type org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration
> processType: org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration are: 
1) Hint{[osbah.HttpMessageConvertersAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oshc.HttpMessageConverter:EXISTENCE_CHECK]}
2) Hint{[osbah.HttpMessageConvertersAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbah.HttpMessageConvertersAutoConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbah.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbah.HttpMessageConvertersAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbah.JacksonHttpMessageConvertersConfiguration:ALL,osbah.GsonHttpMessageConvertersConfiguration:ALL,osbah.JsonbHttpMessageConvertersConfiguration:ALL]}
processing hint Hint{[osbah.HttpMessageConvertersAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oshc.HttpMessageConverter:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.http.converter.HttpMessageConverter not found
Configuration type org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration
> processType: org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration are: 
1) Hint{[osbahc.CodecsAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswrfc.WebClient:EXISTENCE_CHECK,oshc.CodecConfigurer:EXISTENCE_CHECK]}
2) Hint{[osbahc.CodecsAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbahc.CodecsAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.CodecProperties:ALL]}
4) Hint{[osbahc.CodecsAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbahc.CodecsAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswrfc.WebClient:EXISTENCE_CHECK,oshc.CodecConfigurer:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.web.reactive.function.client.WebClient not found
Configuration type org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration
> processType: org/springframework/boot/autoconfigure/influx/InfluxDbAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/influx/InfluxDbAutoConfiguration are: 
1) Hint{[osbai.InfluxDbAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oi.InfluxDB:EXISTENCE_CHECK]}
2) Hint{[osbai.InfluxDbAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbai.InfluxDbAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbai.InfluxDbProperties:ALL]}
4) Hint{[osbai.InfluxDbAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbai.InfluxDbAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oi.InfluxDB:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.influxdb.InfluxDB not found
Configuration type org.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration
> processType: org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration
#2 hints on org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration are: 
1) Hint{[osbai.ProjectInfoAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbai.ProjectInfoProperties:ALL]}
2) Hint{[osbai.ProjectInfoAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbai.ProjectInfoAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbai.ProjectInfoProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.info.ProjectInfoProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbai.ProjectInfoAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: [allDeclaredConstructors, allDeclaredMethods]
WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration = 3 (total methods including @Bean ones:5)
processing 2 @Bean methods
hints on method gitProperties()Lorg/springframework/boot/info/GitProperties;:
[Hint{[osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbai.ProjectInfoAutoConfiguration$GitResourceAvailableCondition:RESOURCE_CTORS_ONLY]}, Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}, Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}]
processing hint Hint{[osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbai.ProjectInfoAutoConfiguration$GitResourceAvailableCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition found, will get accessibility RESOURCE_CTORS_ONLY (whilst processing @Bean method gitProperties()Lorg/springframework/boot/info/GitProperties;)
attempting registration of 1 elements of annotation chain
processing hint Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}
attempting registration of 1 specific types
attempting registration of 0 inferred types
attempting registration of 1 elements of annotation chain
processing hint Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY (whilst processing @Bean method gitProperties()Lorg/springframework/boot/info/GitProperties;)
attempting registration of 2 elements of annotation chain
hints on method buildProperties()Lorg/springframework/boot/info/BuildProperties;:
[Hint{[osbac.ConditionalOnResource,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnResourceCondition:RESOURCE_CTORS_ONLY]}, Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}, Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}]
processing hint Hint{[osbac.ConditionalOnResource,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnResourceCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnResourceCondition found, will get accessibility RESOURCE_CTORS_ONLY (whilst processing @Bean method buildProperties()Lorg/springframework/boot/info/BuildProperties;)
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}
attempting registration of 1 specific types
attempting registration of 0 inferred types
attempting registration of 1 elements of annotation chain
processing hint Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY (whilst processing @Bean method buildProperties()Lorg/springframework/boot/info/BuildProperties;)
attempting registration of 2 elements of annotation chain
  > processType: org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
  no hints on org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
Registering reflective access to org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar: [allDeclaredConstructors, allDeclaredMethods]
  making this accessible: org.springframework.context.annotation.ImportBeanDefinitionRegistrar   RESOURCE_CMC
  making this accessible: org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar   RESOURCE_CMC
  making this accessible: java.lang.Object   RESOURCE_CMC
making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.info.ProjectInfoProperties   ALL
making this accessible: org.springframework.boot.info.BuildProperties   EXISTENCE_MC
making this accessible: org.springframework.context.annotation.Import   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.condition.OnResourceCondition   RESOURCE_CTORS_ONLY
making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnResource   ANNOTATION
making this accessible: org.springframework.boot.info.GitProperties   EXISTENCE_MC
making this accessible: org.springframework.boot.context.properties.EnableConfigurationProperties   ANNOTATION
making this accessible: org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar   ALL
making this accessible: java.lang.Object   RESOURCE_CMC
making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
making this accessible: org.springframework.context.annotation.Bean   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition   RESOURCE_CTORS_ONLY
making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration   ALL
making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
  > processType: org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration$GitResourceAvailableCondition
  no hints on org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration$GitResourceAvailableCondition
    > processType: org/springframework/boot/autoconfigure/condition/SpringBootCondition
    no hints on org/springframework/boot/autoconfigure/condition/SpringBootCondition
    making this accessible: org.springframework.context.annotation.Condition   RESOURCE_CMC
    making this accessible: java.lang.Object   RESOURCE_CMC
    making this accessible: org.springframework.boot.autoconfigure.condition.SpringBootCondition   RESOURCE_CTORS_ONLY
  making this accessible: org.springframework.context.annotation.Condition   RESOURCE_CMC
  making this accessible: java.lang.Object   RESOURCE_CMC
  making this accessible: org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition   RESOURCE_CTORS_ONLY
  making this accessible: org.springframework.boot.autoconfigure.condition.SpringBootCondition   RESOURCE_CTORS_ONLY
Configuration type org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration has passed validation


Processing configuration type org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration
> processType: org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration are: 
1) Hint{[osbai.IntegrationAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osic.EnableIntegration:EXISTENCE_CHECK]}
2) Hint{[osbai.IntegrationAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbai.IntegrationAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbai.IntegrationProperties:ALL]}
4) Hint{[osbai.IntegrationAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbai.IntegrationAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osic.EnableIntegration:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.integration.config.EnableIntegration not found
Configuration type org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration
#2 hints on org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration are: 
1) Hint{[osbaj.JacksonAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cfjd.ObjectMapper:EXISTENCE_CHECK]}
2) Hint{[osbaj.JacksonAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbaj.JacksonAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cfjd.ObjectMapper:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type com.fasterxml.jackson.databind.ObjectMapper not found
Configuration type org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration are: 
1) Hint{[osbaj.DataSourceAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osjde.EmbeddedDatabaseType:EXISTENCE_CHECK,js.DataSource:EXISTENCE_CHECK]}
2) Hint{[osbaj.DataSourceAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaj.DataSourceAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaj.DataSourceProperties:ALL]}
4) Hint{[osbaj.DataSourceAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbaj.DataSourceAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbajm.DataSourcePoolMetadataProvidersConfiguration:ALL,osbaj.DataSourceInitializationConfiguration:ALL]}
processing hint Hint{[osbaj.DataSourceAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osjde.EmbeddedDatabaseType:EXISTENCE_CHECK,js.DataSource:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType not found
Configuration type org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfiguration are: 
1) Hint{[osbaj.JdbcTemplateAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[js.DataSource:EXISTENCE_CHECK,osjc.JdbcTemplate:EXISTENCE_CHECK]}
2) Hint{[osbaj.JdbcTemplateAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaj.JdbcTemplateAutoConfiguration,osbac.ConditionalOnSingleCandidate],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[js.DataSource:EXISTENCE_CHECK]}
4) Hint{[osbaj.JdbcTemplateAutoConfiguration,osbac.ConditionalOnSingleCandidate,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbaj.JdbcTemplateAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaj.JdbcProperties:ALL]}
6) Hint{[osbaj.JdbcTemplateAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
7) Hint{[osbaj.JdbcTemplateAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbaj.JdbcTemplateConfiguration:ALL,osbaj.NamedParameterJdbcTemplateConfiguration:ALL]}
processing hint Hint{[osbaj.JdbcTemplateAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[js.DataSource:EXISTENCE_CHECK,osjc.JdbcTemplate:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type javax.sql.DataSource found, will get accessibility EXISTENCE_CHECK
inferred type org.springframework.jdbc.core.JdbcTemplate not found
Configuration type org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jdbc/JndiDataSourceAutoConfiguration
skipping org/springframework/boot/autoconfigure/jdbc/JndiDataSourceAutoConfiguration due to ConditionalOnPropertyCheck
no hints on org/springframework/boot/autoconfigure/jdbc/JndiDataSourceAutoConfiguration
Configuration type org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jdbc/XADataSourceAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/jdbc/XADataSourceAutoConfiguration are: 
1) Hint{[osbaj.XADataSourceAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaj.DataSourceProperties:ALL]}
2) Hint{[osbaj.XADataSourceAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
3) Hint{[osbaj.XADataSourceAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osjde.EmbeddedDatabaseType:EXISTENCE_CHECK,js.DataSource:EXISTENCE_CHECK,jt.TransactionManager:EXISTENCE_CHECK]}
4) Hint{[osbaj.XADataSourceAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbaj.XADataSourceAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbaj.XADataSourceAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[js.DataSource:EXISTENCE_CHECK]}
7) Hint{[osbaj.XADataSourceAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbaj.XADataSourceAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaj.DataSourceProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.jdbc.DataSourceProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbaj.XADataSourceAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbaj.XADataSourceAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osjde.EmbeddedDatabaseType:EXISTENCE_CHECK,js.DataSource:EXISTENCE_CHECK,jt.TransactionManager:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType not found
Configuration type org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration are: 
1) Hint{[osbaj.DataSourceTransactionManagerAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ost.PlatformTransactionManager:EXISTENCE_CHECK,osjc.JdbcTemplate:EXISTENCE_CHECK]}
2) Hint{[osbaj.DataSourceTransactionManagerAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaj.DataSourceTransactionManagerAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaj.DataSourceProperties:ALL]}
4) Hint{[osbaj.DataSourceTransactionManagerAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbaj.DataSourceTransactionManagerAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ost.PlatformTransactionManager:EXISTENCE_CHECK,osjc.JdbcTemplate:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.transaction.PlatformTransactionManager not found
Configuration type org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jms/JmsAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/jms/JmsAutoConfiguration are: 
1) Hint{[osbaj.JmsAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osjc.JmsTemplate:EXISTENCE_CHECK,jj.Message:EXISTENCE_CHECK]}
2) Hint{[osbaj.JmsAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaj.JmsAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbaj.JmsAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaj.JmsProperties:ALL]}
5) Hint{[osbaj.JmsAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
6) Hint{[osbaj.JmsAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbaj.JmsAnnotationDrivenConfiguration:ALL]}
processing hint Hint{[osbaj.JmsAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osjc.JmsTemplate:EXISTENCE_CHECK,jj.Message:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.jms.core.JmsTemplate not found
Configuration type org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration
skipping org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration due to ConditionalOnPropertyCheck
no hints on org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration
Configuration type org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jms/JndiConnectionFactoryAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/jms/JndiConnectionFactoryAutoConfiguration are: 
1) Hint{[osbaj.JndiConnectionFactoryAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osjc.JmsTemplate:EXISTENCE_CHECK]}
2) Hint{[osbaj.JndiConnectionFactoryAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaj.JndiConnectionFactoryAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[jj.ConnectionFactory:EXISTENCE_CHECK]}
4) Hint{[osbaj.JndiConnectionFactoryAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbaj.JndiConnectionFactoryAutoConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaj.JndiConnectionFactoryAutoConfiguration$JndiOrPropertyCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbaj.JndiConnectionFactoryAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaj.JmsProperties:ALL]}
7) Hint{[osbaj.JndiConnectionFactoryAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbaj.JndiConnectionFactoryAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osjc.JmsTemplate:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.jms.core.JmsTemplate not found
Configuration type org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfiguration are: 
1) Hint{[osbaja.ActiveMQAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jj.ConnectionFactory:EXISTENCE_CHECK,oaa.ActiveMQConnectionFactory:EXISTENCE_CHECK]}
2) Hint{[osbaja.ActiveMQAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaja.ActiveMQAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[jj.ConnectionFactory:EXISTENCE_CHECK]}
4) Hint{[osbaja.ActiveMQAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbaja.ActiveMQAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaj.JmsProperties:ALL,osbaja.ActiveMQProperties:ALL]}
6) Hint{[osbaja.ActiveMQAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
7) Hint{[osbaja.ActiveMQAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbaja.ActiveMQXAConnectionFactoryConfiguration:ALL,osbaja.ActiveMQConnectionFactoryConfiguration:ALL]}
processing hint Hint{[osbaja.ActiveMQAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jj.ConnectionFactory:EXISTENCE_CHECK,oaa.ActiveMQConnectionFactory:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type javax.jms.ConnectionFactory not found
Configuration type org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jms/artemis/ArtemisAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/jms/artemis/ArtemisAutoConfiguration are: 
1) Hint{[osbaja.ArtemisAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oaaajc.ActiveMQConnectionFactory:EXISTENCE_CHECK,jj.ConnectionFactory:EXISTENCE_CHECK]}
2) Hint{[osbaja.ArtemisAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaja.ArtemisAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[jj.ConnectionFactory:EXISTENCE_CHECK]}
4) Hint{[osbaja.ArtemisAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbaja.ArtemisAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaja.ArtemisProperties:ALL,osbaj.JmsProperties:ALL]}
6) Hint{[osbaja.ArtemisAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
7) Hint{[osbaja.ArtemisAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbaja.ArtemisConnectionFactoryConfiguration:ALL,osbaja.ArtemisXAConnectionFactoryConfiguration:ALL,osbaja.ArtemisEmbeddedServerConfiguration:ALL]}
processing hint Hint{[osbaja.ArtemisAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oaaajc.ActiveMQConnectionFactory:EXISTENCE_CHECK,jj.ConnectionFactory:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory not found
Configuration type org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration
> processType: org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration are: 
1) Hint{[osbagt.GroovyTemplateAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[gtm.MarkupTemplateEngine:EXISTENCE_CHECK]}
2) Hint{[osbagt.GroovyTemplateAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbagt.GroovyTemplateAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbagt.GroovyTemplateProperties:ALL]}
4) Hint{[osbagt.GroovyTemplateAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbagt.GroovyTemplateAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[gtm.MarkupTemplateEngine:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type groovy.text.markup.MarkupTemplateEngine not found
Configuration type org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration
for org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration missing types are [org/springframework/web/context/ServletContextAware]
Configuration type org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jooq/JooqAutoConfiguration
#3 hints on org/springframework/boot/autoconfigure/jooq/JooqAutoConfiguration are: 
1) Hint{[osbaj.JooqAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oj.DSLContext:EXISTENCE_CHECK]}
2) Hint{[osbaj.JooqAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaj.JooqAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbaj.JooqAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oj.DSLContext:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.jooq.DSLContext not found
Configuration type org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration
> processType: org/springframework/boot/autoconfigure/jsonb/JsonbAutoConfiguration
#3 hints on org/springframework/boot/autoconfigure/jsonb/JsonbAutoConfiguration are: 
1) Hint{[osbaj.JsonbAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jjb.Jsonb:EXISTENCE_CHECK]}
2) Hint{[osbaj.JsonbAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaj.JsonbAutoConfiguration,osbac.ConditionalOnResource,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnResourceCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbaj.JsonbAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jjb.Jsonb:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type javax.json.bind.Jsonb not found
Configuration type org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration
> processType: org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration are: 
1) Hint{[osbak.KafkaAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oskc.KafkaTemplate:EXISTENCE_CHECK]}
2) Hint{[osbak.KafkaAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbak.KafkaAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbak.KafkaProperties:ALL]}
4) Hint{[osbak.KafkaAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbak.KafkaAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbak.KafkaStreamsAnnotationDrivenConfiguration:ALL,osbak.KafkaAnnotationDrivenConfiguration:ALL]}
processing hint Hint{[osbak.KafkaAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oskc.KafkaTemplate:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.kafka.core.KafkaTemplate not found
Configuration type org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration
> processType: org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration are: 
1) Hint{[osbale.EmbeddedLdapAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbal.LdapProperties:ALL,osbale.EmbeddedLdapProperties:ALL]}
2) Hint{[osbale.EmbeddedLdapAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
3) Hint{[osbale.EmbeddedLdapAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cull.InMemoryDirectoryServer:EXISTENCE_CHECK]}
4) Hint{[osbale.EmbeddedLdapAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbale.EmbeddedLdapAutoConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbale.EmbeddedLdapAutoConfiguration$EmbeddedLdapCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbale.EmbeddedLdapAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbal.LdapProperties:ALL,osbale.EmbeddedLdapProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.boot.autoconfigure.ldap.LdapProperties found, will get accessibility ALL
inferred type org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbale.EmbeddedLdapAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbale.EmbeddedLdapAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cull.InMemoryDirectoryServer:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type com.unboundid.ldap.listener.InMemoryDirectoryServer not found
Configuration type org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration
> processType: org/springframework/boot/autoconfigure/ldap/LdapAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/ldap/LdapAutoConfiguration are: 
1) Hint{[osbal.LdapAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oslc.ContextSource:EXISTENCE_CHECK]}
2) Hint{[osbal.LdapAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbal.LdapAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbal.LdapProperties:ALL]}
4) Hint{[osbal.LdapAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbal.LdapAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oslc.ContextSource:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.ldap.core.ContextSource not found
Configuration type org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration
> processType: org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration are: 
1) Hint{[osbal.LiquibaseAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[lis.SpringLiquibase:EXISTENCE_CHECK,lc.DatabaseChange:EXISTENCE_CHECK]}
2) Hint{[osbal.LiquibaseAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbal.LiquibaseAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbal.LiquibaseAutoConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbal.LiquibaseAutoConfiguration$LiquibaseDataSourceCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbal.LiquibaseAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbal.LiquibaseAutoConfiguration$LiquibaseNamedParameterJdbcOperationsDependsOnPostProcessor:ALL,osbal.LiquibaseAutoConfiguration$LiquibaseEntityManagerFactoryDependsOnPostProcessor:ALL,osbal.LiquibaseAutoConfiguration$LiquibaseJdbcOperationsDependsOnPostProcessor:ALL]}
processing hint Hint{[osbal.LiquibaseAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[lis.SpringLiquibase:EXISTENCE_CHECK,lc.DatabaseChange:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type liquibase.integration.spring.SpringLiquibase not found
Configuration type org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration
> processType: org/springframework/boot/autoconfigure/mail/MailSenderAutoConfiguration
#8 hints on org/springframework/boot/autoconfigure/mail/MailSenderAutoConfiguration are: 
1) Hint{[osbam.MailSenderAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osm.MailSender:EXISTENCE_CHECK,ja.MimeType:EXISTENCE_CHECK,jmi.MimeMessage:EXISTENCE_CHECK]}
2) Hint{[osbam.MailSenderAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbam.MailSenderAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osm.MailSender:EXISTENCE_CHECK]}
4) Hint{[osbam.MailSenderAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbam.MailSenderAutoConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbam.MailSenderAutoConfiguration$MailSenderCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbam.MailSenderAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbam.MailProperties:ALL]}
7) Hint{[osbam.MailSenderAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
8) Hint{[osbam.MailSenderAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbam.MailSenderPropertiesConfiguration:ALL,osbam.MailSenderJndiConfiguration:ALL]}
processing hint Hint{[osbam.MailSenderAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osm.MailSender:EXISTENCE_CHECK,ja.MimeType:EXISTENCE_CHECK,jmi.MimeMessage:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type org.springframework.mail.MailSender not found
Configuration type org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration
> processType: org/springframework/boot/autoconfigure/mail/MailSenderValidatorAutoConfiguration
skipping org/springframework/boot/autoconfigure/mail/MailSenderValidatorAutoConfiguration due to ConditionalOnPropertyCheck
no hints on org/springframework/boot/autoconfigure/mail/MailSenderValidatorAutoConfiguration
Configuration type org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration
> processType: org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration are: 
1) Hint{[osbame.EmbeddedMongoAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbame.EmbeddedMongoProperties:ALL,osbam.MongoProperties:ALL]}
2) Hint{[osbame.EmbeddedMongoAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
3) Hint{[osbame.EmbeddedMongoAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cm.MongoClient:EXISTENCE_CHECK,dfem.MongodStarter:EXISTENCE_CHECK]}
4) Hint{[osbame.EmbeddedMongoAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbame.EmbeddedMongoAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbame.EmbeddedMongoAutoConfiguration$EmbeddedReactiveStreamsMongoClientDependsOnBeanFactoryPostProcessor:ALL,osbame.EmbeddedMongoAutoConfiguration$EmbeddedMongoClientDependsOnBeanFactoryPostProcessor:ALL]}
processing hint Hint{[osbame.EmbeddedMongoAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbame.EmbeddedMongoProperties:ALL,osbam.MongoProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties found, will get accessibility ALL
inferred type org.springframework.boot.autoconfigure.mongo.MongoProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbame.EmbeddedMongoAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbame.EmbeddedMongoAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cm.MongoClient:EXISTENCE_CHECK,dfem.MongodStarter:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type com.mongodb.MongoClient not found
Configuration type org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
> processType: org/springframework/boot/autoconfigure/mongo/MongoAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/mongo/MongoAutoConfiguration are: 
1) Hint{[osbam.MongoAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cm.MongoClient:EXISTENCE_CHECK]}
2) Hint{[osbam.MongoAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbam.MongoAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbam.MongoProperties:ALL]}
4) Hint{[osbam.MongoAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbam.MongoAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}
6) Hint{[osbam.MongoAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbam.MongoAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[cm.MongoClient:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type com.mongodb.MongoClient not found
Configuration type org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration
> processType: org/springframework/boot/autoconfigure/mongo/MongoReactiveAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/mongo/MongoReactiveAutoConfiguration are: 
1) Hint{[osbam.MongoReactiveAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,cmrc.MongoClient:EXISTENCE_CHECK]}
2) Hint{[osbam.MongoReactiveAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbam.MongoReactiveAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbam.MongoProperties:ALL]}
4) Hint{[osbam.MongoReactiveAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbam.MongoReactiveAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,cmrc.MongoClient:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type reactor.core.publisher.Flux not found
Configuration type org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration
> processType: org/springframework/boot/autoconfigure/mustache/MustacheAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/mustache/MustacheAutoConfiguration are: 
1) Hint{[osbam.MustacheAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[csm.Mustache:EXISTENCE_CHECK]}
2) Hint{[osbam.MustacheAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbam.MustacheAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbam.MustacheProperties:ALL]}
4) Hint{[osbam.MustacheAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbam.MustacheAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbam.MustacheReactiveWebConfiguration:ALL,osbam.MustacheServletWebConfiguration:ALL]}
processing hint Hint{[osbam.MustacheAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[csm.Mustache:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type com.samskivert.mustache.Mustache not found
Configuration type org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
> processType: org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration are: 
1) Hint{[osbaoj.HibernateJpaAutoConfiguration],skipIfTypesMissing=false,follow=false,specificTypes=[csxise.XMLEventFactoryImpl:REGISTRAR,oallm.DefaultFlowMessageFactory:REGISTRAR,czhu.ConcurrentBag$IConcurrentBagEntry[]:REGISTRAR,czhu.ConcurrentBag$IConcurrentBagEntry:REGISTRAR],inferredTypes=[]}
2) Hint{[osbaoj.HibernateJpaAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jp.EntityManager:EXISTENCE_CHECK,ohes.SessionImplementor:EXISTENCE_CHECK,osoj.LocalContainerEntityManagerFactoryBean:EXISTENCE_CHECK]}
3) Hint{[osbaoj.HibernateJpaAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbaoj.HibernateJpaAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaoj.JpaProperties:ALL]}
5) Hint{[osbaoj.HibernateJpaAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
6) Hint{[osbaoj.HibernateJpaAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbaoj.HibernateJpaConfiguration:ALL]}
processing hint Hint{[osbaoj.HibernateJpaAutoConfiguration],skipIfTypesMissing=false,follow=false,specificTypes=[csxise.XMLEventFactoryImpl:REGISTRAR,oallm.DefaultFlowMessageFactory:REGISTRAR,czhu.ConcurrentBag$IConcurrentBagEntry[]:REGISTRAR,czhu.ConcurrentBag$IConcurrentBagEntry:REGISTRAR],inferredTypes=[]}
attempting registration of 4 specific types
attempting registration of 0 inferred types
attempting registration of 1 elements of annotation chain
processing hint Hint{[osbaoj.HibernateJpaAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jp.EntityManager:EXISTENCE_CHECK,ohes.SessionImplementor:EXISTENCE_CHECK,osoj.LocalContainerEntityManagerFactoryBean:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type javax.persistence.EntityManager not found
Configuration type org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration
> processType: org/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration are: 
1) Hint{[osbaq.QuartzAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ost.PlatformTransactionManager:EXISTENCE_CHECK,ossq.SchedulerFactoryBean:EXISTENCE_CHECK,oq.Scheduler:EXISTENCE_CHECK]}
2) Hint{[osbaq.QuartzAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaq.QuartzAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaq.QuartzProperties:ALL]}
4) Hint{[osbaq.QuartzAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbaq.QuartzAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ost.PlatformTransactionManager:EXISTENCE_CHECK,ossq.SchedulerFactoryBean:EXISTENCE_CHECK,oq.Scheduler:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type org.springframework.transaction.PlatformTransactionManager not found
Configuration type org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration
> processType: org/springframework/boot/autoconfigure/rsocket/RSocketMessagingAutoConfiguration
#2 hints on org/springframework/boot/autoconfigure/rsocket/RSocketMessagingAutoConfiguration are: 
1) Hint{[osbar.RSocketMessagingAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osmr.RSocketRequester:EXISTENCE_CHECK,irtns.TcpServerTransport:EXISTENCE_CHECK,ir.RSocketFactory:EXISTENCE_CHECK]}
2) Hint{[osbar.RSocketMessagingAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbar.RSocketMessagingAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osmr.RSocketRequester:EXISTENCE_CHECK,irtns.TcpServerTransport:EXISTENCE_CHECK,ir.RSocketFactory:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type org.springframework.messaging.rsocket.RSocketRequester not found
Configuration type org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.rsocket.RSocketRequesterAutoConfiguration
> processType: org/springframework/boot/autoconfigure/rsocket/RSocketRequesterAutoConfiguration
#2 hints on org/springframework/boot/autoconfigure/rsocket/RSocketRequesterAutoConfiguration are: 
1) Hint{[osbar.RSocketRequesterAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osmr.RSocketRequester:EXISTENCE_CHECK,rnhs.HttpServer:EXISTENCE_CHECK,irtns.TcpServerTransport:EXISTENCE_CHECK,ir.RSocketFactory:EXISTENCE_CHECK]}
2) Hint{[osbar.RSocketRequesterAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbar.RSocketRequesterAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osmr.RSocketRequester:EXISTENCE_CHECK,rnhs.HttpServer:EXISTENCE_CHECK,irtns.TcpServerTransport:EXISTENCE_CHECK,ir.RSocketFactory:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 4 inferred types
inferred type org.springframework.messaging.rsocket.RSocketRequester not found
Configuration type org.springframework.boot.autoconfigure.rsocket.RSocketRequesterAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.rsocket.RSocketRequesterAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration
> processType: org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration are: 
1) Hint{[osbar.RSocketServerAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rnhs.HttpServer:EXISTENCE_CHECK,osmr.RSocketStrategies:EXISTENCE_CHECK,irtns.TcpServerTransport:EXISTENCE_CHECK,ir.RSocketFactory:EXISTENCE_CHECK]}
2) Hint{[osbar.RSocketServerAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbar.RSocketServerAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbar.RSocketServerAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbar.RSocketProperties:ALL]}
5) Hint{[osbar.RSocketServerAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbar.RSocketServerAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rnhs.HttpServer:EXISTENCE_CHECK,osmr.RSocketStrategies:EXISTENCE_CHECK,irtns.TcpServerTransport:EXISTENCE_CHECK,ir.RSocketFactory:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 4 inferred types
inferred type reactor.netty.http.server.HttpServer not found
Configuration type org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/rsocket/RSocketStrategiesAutoConfiguration
#2 hints on org/springframework/boot/autoconfigure/rsocket/RSocketStrategiesAutoConfiguration are: 
1) Hint{[osbar.RSocketStrategiesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osmr.RSocketStrategies:EXISTENCE_CHECK,inb.PooledByteBufAllocator:EXISTENCE_CHECK,ir.RSocketFactory:EXISTENCE_CHECK]}
2) Hint{[osbar.RSocketStrategiesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbar.RSocketStrategiesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osmr.RSocketStrategies:EXISTENCE_CHECK,inb.PooledByteBufAllocator:EXISTENCE_CHECK,ir.RSocketFactory:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type org.springframework.messaging.rsocket.RSocketStrategies not found
Configuration type org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
> processType: org/springframework/boot/autoconfigure/security/servlet/SecurityAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/security/servlet/SecurityAutoConfiguration are: 
1) Hint{[osbass.SecurityAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossa.DefaultAuthenticationEventPublisher:EXISTENCE_CHECK]}
2) Hint{[osbass.SecurityAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbass.SecurityAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbas.SecurityProperties:ALL]}
4) Hint{[osbass.SecurityAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbass.SecurityAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbass.SpringBootWebSecurityConfiguration:ALL,osbas.SecurityDataConfiguration:ALL,osbass.WebSecurityEnablerConfiguration:ALL]}
processing hint Hint{[osbass.SecurityAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossa.DefaultAuthenticationEventPublisher:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.security.authentication.DefaultAuthenticationEventPublisher not found
Configuration type org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
> processType: org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration are: 
1) Hint{[osbass.UserDetailsServiceAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossa.AuthenticationManager:EXISTENCE_CHECK]}
2) Hint{[osbass.UserDetailsServiceAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbass.UserDetailsServiceAutoConfiguration,osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbass.UserDetailsServiceAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[ossa.AuthenticationManager:EXISTENCE_CHECK,osscu.UserDetailsService:EXISTENCE_CHECK,ossa.AuthenticationProvider:EXISTENCE_CHECK]}
5) Hint{[osbass.UserDetailsServiceAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbass.UserDetailsServiceAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossa.AuthenticationManager:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.security.authentication.AuthenticationManager not found
Configuration type org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration
> processType: org/springframework/boot/autoconfigure/security/servlet/SecurityFilterAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/security/servlet/SecurityFilterAutoConfiguration are: 
1) Hint{[osbass.SecurityFilterAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
2) Hint{[osbass.SecurityFilterAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbass.SecurityFilterAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbas.SecurityProperties:ALL]}
4) Hint{[osbass.SecurityFilterAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
5) Hint{[osbass.SecurityFilterAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osswc.AbstractSecurityWebApplicationInitializer:EXISTENCE_CHECK,ossch.SessionCreationPolicy:EXISTENCE_CHECK]}
6) Hint{[osbass.SecurityFilterAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbass.SecurityFilterAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
attempting registration of 2 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbass.SecurityFilterAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbass.SecurityFilterAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbas.SecurityProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.security.SecurityProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbass.SecurityFilterAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbass.SecurityFilterAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osswc.AbstractSecurityWebApplicationInitializer:EXISTENCE_CHECK,ossch.SessionCreationPolicy:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer not found
Configuration type org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration
> processType: org/springframework/boot/autoconfigure/security/reactive/ReactiveSecurityAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/security/reactive/ReactiveSecurityAutoConfiguration are: 
1) Hint{[osbasr.ReactiveSecurityAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbas.SecurityProperties:ALL]}
2) Hint{[osbasr.ReactiveSecurityAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
3) Hint{[osbasr.ReactiveSecurityAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,oswrc.WebFluxConfigurer:EXISTENCE_CHECK,osscawr.EnableWebFluxSecurity:EXISTENCE_CHECK,ossws.WebFilterChainProxy:EXISTENCE_CHECK]}
4) Hint{[osbasr.ReactiveSecurityAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbasr.ReactiveSecurityAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbas.SecurityProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.security.SecurityProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbasr.ReactiveSecurityAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbasr.ReactiveSecurityAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,oswrc.WebFluxConfigurer:EXISTENCE_CHECK,osscawr.EnableWebFluxSecurity:EXISTENCE_CHECK,ossws.WebFilterChainProxy:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 4 inferred types
inferred type reactor.core.publisher.Flux not found
Configuration type org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration
> processType: org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration are: 
1) Hint{[osbasr.ReactiveUserDetailsServiceAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossa.ReactiveAuthenticationManager:EXISTENCE_CHECK]}
2) Hint{[osbasr.ReactiveUserDetailsServiceAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbasr.ReactiveUserDetailsServiceAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[osscu.ReactiveUserDetailsService:EXISTENCE_CHECK,ossa.ReactiveAuthenticationManager:EXISTENCE_CHECK]}
4) Hint{[osbasr.ReactiveUserDetailsServiceAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbasr.ReactiveUserDetailsServiceAutoConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbasr.ReactiveUserDetailsServiceAutoConfiguration$ReactiveUserDetailsServiceCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbasr.ReactiveUserDetailsServiceAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbas.SecurityProperties:ALL]}
7) Hint{[osbasr.ReactiveUserDetailsServiceAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbasr.ReactiveUserDetailsServiceAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossa.ReactiveAuthenticationManager:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.security.authentication.ReactiveAuthenticationManager not found
Configuration type org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.security.rsocket.RSocketSecurityAutoConfiguration
> processType: org/springframework/boot/autoconfigure/security/rsocket/RSocketSecurityAutoConfiguration
for org/springframework/boot/autoconfigure/security/rsocket/RSocketSecurityAutoConfiguration missing annotation types are [Lorg.springframework.security.config.annotation.rsocket.EnableRSocketSecurity]
Couldn't resolve Lorg/springframework/security/config/annotation/rsocket/EnableRSocketSecurity; annotation type whilst searching for hints on org/springframework/boot/autoconfigure/security/rsocket/RSocketSecurityAutoConfiguration
#2 hints on org/springframework/boot/autoconfigure/security/rsocket/RSocketSecurityAutoConfiguration are: 
1) Hint{[osbasr.RSocketSecurityAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossrc.SecuritySocketAcceptorInterceptor:EXISTENCE_CHECK]}
2) Hint{[osbasr.RSocketSecurityAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbasr.RSocketSecurityAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossrc.SecuritySocketAcceptorInterceptor:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor not found
Configuration type org.springframework.boot.autoconfigure.security.rsocket.RSocketSecurityAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.security.rsocket.RSocketSecurityAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyAutoConfiguration
> processType: org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyAutoConfiguration are: 
1) Hint{[osbass.Saml2RelyingPartyAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossspsr.RelyingPartyRegistrationRepository:EXISTENCE_CHECK]}
2) Hint{[osbass.Saml2RelyingPartyAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbass.Saml2RelyingPartyAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
4) Hint{[osbass.Saml2RelyingPartyAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbass.Saml2RelyingPartyAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbass.Saml2LoginConfiguration:ALL,osbass.Saml2RelyingPartyRegistrationConfiguration:ALL]}
6) Hint{[osbass.Saml2RelyingPartyAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbass.Saml2RelyingPartyProperties:ALL]}
7) Hint{[osbass.Saml2RelyingPartyAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbass.Saml2RelyingPartyAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossspsr.RelyingPartyRegistrationRepository:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository not found
Configuration type org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration
> processType: org/springframework/boot/autoconfigure/sendgrid/SendGridAutoConfiguration
skipping org/springframework/boot/autoconfigure/sendgrid/SendGridAutoConfiguration due to ConditionalOnPropertyCheck
no hints on org/springframework/boot/autoconfigure/sendgrid/SendGridAutoConfiguration
Configuration type org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.session.SessionAutoConfiguration
> processType: org/springframework/boot/autoconfigure/session/SessionAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/session/SessionAutoConfiguration are: 
1) Hint{[osbas.SessionAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oss.Session:EXISTENCE_CHECK]}
2) Hint{[osbas.SessionAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbas.SessionAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
4) Hint{[osbas.SessionAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbas.SessionAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbas.SessionProperties:ALL,osbaw.ServerProperties:ALL]}
6) Hint{[osbas.SessionAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbas.SessionAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oss.Session:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.session.Session not found
Configuration type org.springframework.boot.autoconfigure.session.SessionAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.session.SessionAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration
> processType: org/springframework/boot/autoconfigure/security/oauth2/client/servlet/OAuth2ClientAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/security/oauth2/client/servlet/OAuth2ClientAutoConfiguration are: 
1) Hint{[osbasocs.OAuth2ClientAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osscawc.EnableWebSecurity:EXISTENCE_CHECK,ossocr.ClientRegistration:EXISTENCE_CHECK]}
2) Hint{[osbasocs.OAuth2ClientAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbasocs.OAuth2ClientAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
4) Hint{[osbasocs.OAuth2ClientAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbasocs.OAuth2ClientAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbasocs.OAuth2WebSecurityConfiguration:ALL,osbasocs.OAuth2ClientRegistrationRepositoryConfiguration:ALL]}
processing hint Hint{[osbasocs.OAuth2ClientAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osscawc.EnableWebSecurity:EXISTENCE_CHECK,ossocr.ClientRegistration:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.security.config.annotation.web.configuration.EnableWebSecurity not found
Configuration type org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration
> processType: org/springframework/boot/autoconfigure/security/oauth2/client/reactive/ReactiveOAuth2ClientAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/security/oauth2/client/reactive/ReactiveOAuth2ClientAutoConfiguration are: 
1) Hint{[osbasocr.ReactiveOAuth2ClientAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbasoc.OAuth2ClientProperties:ALL]}
2) Hint{[osbasocr.ReactiveOAuth2ClientAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
3) Hint{[osbasocr.ReactiveOAuth2ClientAutoConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbasocr.ReactiveOAuth2ClientAutoConfiguration$NonServletApplicationCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbasocr.ReactiveOAuth2ClientAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,osscawr.EnableWebFluxSecurity:EXISTENCE_CHECK,ossocr.ClientRegistration:EXISTENCE_CHECK]}
5) Hint{[osbasocr.ReactiveOAuth2ClientAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbasocr.ReactiveOAuth2ClientAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbasocr.ReactiveOAuth2ClientConfigurations$ReactiveClientRegistrationRepositoryConfiguration:ALL,osbasocr.ReactiveOAuth2ClientConfigurations$ReactiveOAuth2ClientConfiguration:ALL]}
processing hint Hint{[osbasocr.ReactiveOAuth2ClientAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbasoc.OAuth2ClientProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbasocr.ReactiveOAuth2ClientAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbasocr.ReactiveOAuth2ClientAutoConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbasocr.ReactiveOAuth2ClientAutoConfiguration$NonServletApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration$NonServletApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbasocr.ReactiveOAuth2ClientAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[rcp.Flux:EXISTENCE_CHECK,osscawr.EnableWebFluxSecurity:EXISTENCE_CHECK,ossocr.ClientRegistration:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type reactor.core.publisher.Flux not found
Configuration type org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration
> processType: org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerAutoConfiguration are: 
1) Hint{[osbasors.OAuth2ResourceServerAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbasor.OAuth2ResourceServerProperties:ALL]}
2) Hint{[osbasors.OAuth2ResourceServerAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
3) Hint{[osbasors.OAuth2ResourceServerAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
4) Hint{[osbasors.OAuth2ResourceServerAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbasors.OAuth2ResourceServerAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbasor.OAuth2ResourceServerProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbasors.OAuth2ResourceServerAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbasors.OAuth2ResourceServerAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
attempting registration of 2 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbasors.OAuth2ResourceServerAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
Configuration type org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration
> processType: org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerAutoConfiguration are: 
1) Hint{[osbasorr.ReactiveOAuth2ResourceServerAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbasor.OAuth2ResourceServerProperties:ALL]}
2) Hint{[osbasorr.ReactiveOAuth2ResourceServerAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
3) Hint{[osbasorr.ReactiveOAuth2ResourceServerAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osscawr.EnableWebFluxSecurity:EXISTENCE_CHECK]}
4) Hint{[osbasorr.ReactiveOAuth2ResourceServerAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbasorr.ReactiveOAuth2ResourceServerAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
6) Hint{[osbasorr.ReactiveOAuth2ResourceServerAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbasorr.ReactiveOAuth2ResourceServerAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbasor.OAuth2ResourceServerProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbasorr.ReactiveOAuth2ResourceServerAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbasorr.ReactiveOAuth2ResourceServerAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osscawr.EnableWebFluxSecurity:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity not found
Configuration type org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration
> processType: org/springframework/boot/autoconfigure/solr/SolrAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/solr/SolrAutoConfiguration are: 
1) Hint{[osbas.SolrAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oascsi.HttpSolrClient:EXISTENCE_CHECK,oascsi.CloudSolrClient:EXISTENCE_CHECK]}
2) Hint{[osbas.SolrAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbas.SolrAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbas.SolrProperties:ALL]}
4) Hint{[osbas.SolrAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbas.SolrAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oascsi.HttpSolrClient:EXISTENCE_CHECK,oascsi.CloudSolrClient:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.apache.solr.client.solrj.impl.HttpSolrClient not found
Configuration type org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration
> processType: org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration are: 
1) Hint{[osbat.TaskExecutionAutoConfiguration],skipIfTypesMissing=true,follow=false,specificTypes=[ossc.ThreadPoolTaskExecutor:REGISTRAR],inferredTypes=[]}
2) Hint{[osbat.TaskExecutionAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossc.ThreadPoolTaskExecutor:EXISTENCE_CHECK]}
3) Hint{[osbat.TaskExecutionAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbat.TaskExecutionAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbat.TaskExecutionProperties:ALL]}
5) Hint{[osbat.TaskExecutionAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbat.TaskExecutionAutoConfiguration],skipIfTypesMissing=true,follow=false,specificTypes=[ossc.ThreadPoolTaskExecutor:REGISTRAR],inferredTypes=[]}
attempting registration of 1 specific types
attempting registration of 0 inferred types
attempting registration of 1 elements of annotation chain
processing hint Hint{[osbat.TaskExecutionAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossc.ThreadPoolTaskExecutor:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor found, will get accessibility EXISTENCE_CHECK
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbat.TaskExecutionAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbat.TaskExecutionAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbat.TaskExecutionProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.task.TaskExecutionProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbat.TaskExecutionAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: [allDeclaredConstructors, allDeclaredMethods]
WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration = 1 (total methods including @Bean ones:3)
processing 2 @Bean methods
hints on method taskExecutorBuilder(Lorg/springframework/boot/autoconfigure/task/TaskExecutionProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/task/TaskExecutorBuilder;:
[Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}, Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}]
processing hint Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}
attempting registration of 1 specific types
attempting registration of 0 inferred types
attempting registration of 1 elements of annotation chain
processing hint Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY (whilst processing @Bean method taskExecutorBuilder(Lorg/springframework/boot/autoconfigure/task/TaskExecutionProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/task/TaskExecutorBuilder;)
attempting registration of 2 elements of annotation chain
hints on method applicationTaskExecutor(Lorg/springframework/boot/task/TaskExecutorBuilder;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;:
[Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[juc.Executor:EXISTENCE_CHECK]}, Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}]
processing hint Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[juc.Executor:EXISTENCE_CHECK]}
attempting registration of 1 specific types
attempting registration of 1 inferred types
inferred type java.util.concurrent.Executor found, will get accessibility EXISTENCE_CHECK (whilst processing @Bean method applicationTaskExecutor(Lorg/springframework/boot/task/TaskExecutorBuilder;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;)
attempting registration of 1 elements of annotation chain
processing hint Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY (whilst processing @Bean method applicationTaskExecutor(Lorg/springframework/boot/task/TaskExecutorBuilder;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;)
attempting registration of 2 elements of annotation chain
  > processType: org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
  no hints on org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
Registering reflective access to org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar: [allDeclaredConstructors, allDeclaredMethods]
  making this accessible: org.springframework.context.annotation.ImportBeanDefinitionRegistrar   RESOURCE_CMC
  making this accessible: org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar   RESOURCE_CMC
  making this accessible: java.lang.Object   RESOURCE_CMC
making this accessible: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor   EXISTENCE_MC
making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration   ALL
This is in the constant data, does it need to stay in there? org.springframework.boot.task.TaskExecutorBuilder  (dynamically requested access is EXISTENCE_MC)
making this accessible: org.springframework.boot.task.TaskExecutorBuilder   EXISTENCE_MC
WARNING: type org.springframework.boot.task.TaskExecutorBuilder being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnClass   ANNOTATION
making this accessible: java.util.concurrent.Executor   EXISTENCE_CHECK
making this accessible: org.springframework.context.annotation.Import   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
making this accessible: org.springframework.boot.context.properties.EnableConfigurationProperties   ANNOTATION
making this accessible: org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar   ALL
making this accessible: java.lang.Object   RESOURCE_CMC
making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
making this accessible: org.springframework.context.annotation.Lazy   ANNOTATION
making this accessible: org.springframework.context.annotation.Bean   ANNOTATION
making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.task.TaskExecutionProperties   ALL
making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
Configuration type org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration has passed validation


Processing configuration type org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration
> processType: org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration are: 
1) Hint{[osbat.TaskSchedulingAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossc.ThreadPoolTaskScheduler:EXISTENCE_CHECK]}
2) Hint{[osbat.TaskSchedulingAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbat.TaskSchedulingAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbat.TaskSchedulingProperties:ALL]}
4) Hint{[osbat.TaskSchedulingAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbat.TaskSchedulingAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ossc.ThreadPoolTaskScheduler:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler found, will get accessibility EXISTENCE_CHECK
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbat.TaskSchedulingAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnClassCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbat.TaskSchedulingAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbat.TaskSchedulingProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.task.TaskSchedulingProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbat.TaskSchedulingAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
Registering reflective access to org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: [allDeclaredConstructors, allDeclaredMethods]
registering 1 @AutoConfigureBefore/After references
WARNING: Methods unnecessarily being exposed by reflection on this config type org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration = 1 (total methods including @Bean ones:3)
processing 2 @Bean methods
hints on method taskScheduler(Lorg/springframework/boot/task/TaskSchedulerBuilder;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;:
[Hint{[osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}, Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[ossa.SchedulingConfigurer:EXISTENCE_CHECK,juc.ScheduledExecutorService:EXISTENCE_CHECK,oss.TaskScheduler:EXISTENCE_CHECK]}, Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}]
processing hint Hint{[osbac.ConditionalOnBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY (whilst processing @Bean method taskScheduler(Lorg/springframework/boot/task/TaskSchedulerBuilder;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;)
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[ossa.SchedulingConfigurer:EXISTENCE_CHECK,juc.ScheduledExecutorService:EXISTENCE_CHECK,oss.TaskScheduler:EXISTENCE_CHECK]}
attempting registration of 1 specific types
attempting registration of 3 inferred types
inferred type org.springframework.scheduling.annotation.SchedulingConfigurer found, will get accessibility EXISTENCE_CHECK (whilst processing @Bean method taskScheduler(Lorg/springframework/boot/task/TaskSchedulerBuilder;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;)
inferred type java.util.concurrent.ScheduledExecutorService found, will get accessibility EXISTENCE_CHECK (whilst processing @Bean method taskScheduler(Lorg/springframework/boot/task/TaskSchedulerBuilder;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;)
inferred type org.springframework.scheduling.TaskScheduler found, will get accessibility EXISTENCE_CHECK (whilst processing @Bean method taskScheduler(Lorg/springframework/boot/task/TaskSchedulerBuilder;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;)
attempting registration of 1 elements of annotation chain
processing hint Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY (whilst processing @Bean method taskScheduler(Lorg/springframework/boot/task/TaskSchedulerBuilder;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;)
attempting registration of 2 elements of annotation chain
hints on method taskSchedulerBuilder(Lorg/springframework/boot/autoconfigure/task/TaskSchedulingProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/task/TaskSchedulerBuilder;:
[Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}, Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}]
processing hint Hint{[osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[]}
attempting registration of 1 specific types
attempting registration of 0 inferred types
attempting registration of 1 elements of annotation chain
processing hint Hint{[osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnBeanCondition found, will get accessibility RESOURCE_CTORS_ONLY (whilst processing @Bean method taskSchedulerBuilder(Lorg/springframework/boot/autoconfigure/task/TaskSchedulingProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/task/TaskSchedulerBuilder;)
attempting registration of 2 elements of annotation chain
  > processType: org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
  no hints on org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
Registering reflective access to org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar: [allDeclaredConstructors, allDeclaredMethods]
  making this accessible: org.springframework.context.annotation.ImportBeanDefinitionRegistrar   RESOURCE_CMC
  making this accessible: org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar   RESOURCE_CMC
  making this accessible: java.lang.Object   RESOURCE_CMC
making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnBean   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration   EXISTENCE_CHECK
making this accessible: org.springframework.boot.autoconfigure.condition.ConditionalOnClass   ANNOTATION
making this accessible: org.springframework.context.annotation.Import   ANNOTATION
making this accessible: org.springframework.scheduling.TaskScheduler   EXISTENCE_CHECK
making this accessible: org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration   ALL
making this accessible: org.springframework.boot.autoconfigure.condition.OnClassCondition   RESOURCE_CTORS_ONLY
making this accessible: org.springframework.scheduling.annotation.SchedulingConfigurer   EXISTENCE_CHECK
making this accessible: org.springframework.boot.context.properties.EnableConfigurationProperties   ANNOTATION
making this accessible: java.util.concurrent.ScheduledExecutorService   EXISTENCE_CHECK
making this accessible: org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar   ALL
making this accessible: java.lang.Object   RESOURCE_CMC
making this accessible: org.springframework.boot.autoconfigure.condition.OnBeanCondition   RESOURCE_CTORS_ONLY
making this accessible: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler   EXISTENCE_MC
making this accessible: org.springframework.context.annotation.Bean   ANNOTATION
This is in the constant data, does it need to stay in there? org.springframework.boot.task.TaskSchedulerBuilder  (dynamically requested access is EXISTENCE_MC)
making this accessible: org.springframework.boot.task.TaskSchedulerBuilder   EXISTENCE_MC
WARNING: type org.springframework.boot.task.TaskSchedulerBuilder being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
making this accessible: org.springframework.context.annotation.Conditional   ANNOTATION
making this accessible: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties   ALL
making this accessible: org.springframework.boot.autoconfigure.condition.SearchStrategy   ALL
Configuration type org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration has passed validation


Processing configuration type org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration
> processType: org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration are: 
1) Hint{[osbat.ThymeleafAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbat.ThymeleafProperties:ALL]}
2) Hint{[osbat.ThymeleafAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
3) Hint{[osbat.ThymeleafAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ots.SpringTemplateEngine:EXISTENCE_CHECK,ott.TemplateMode:EXISTENCE_CHECK]}
4) Hint{[osbat.ThymeleafAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbat.ThymeleafAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbat.ThymeleafProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbat.ThymeleafAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbat.ThymeleafAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ots.SpringTemplateEngine:EXISTENCE_CHECK,ott.TemplateMode:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.thymeleaf.spring5.SpringTemplateEngine not found
Configuration type org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration
> processType: org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration are: 
1) Hint{[osbat.TransactionAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ost.PlatformTransactionManager:EXISTENCE_CHECK]}
2) Hint{[osbat.TransactionAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbat.TransactionAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbat.TransactionProperties:ALL]}
4) Hint{[osbat.TransactionAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbat.TransactionAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[ost.PlatformTransactionManager:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.transaction.PlatformTransactionManager not found
Configuration type org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration
> processType: org/springframework/boot/autoconfigure/transaction/jta/JtaAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/transaction/jta/JtaAutoConfiguration are: 
1) Hint{[osbatj.JtaAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jt.Transaction:EXISTENCE_CHECK]}
2) Hint{[osbatj.JtaAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbatj.JtaAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbatj.JtaAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbatj.JndiJtaConfiguration:ALL,osbatj.BitronixJtaConfiguration:ALL,osbatj.AtomikosJtaConfiguration:ALL]}
processing hint Hint{[osbatj.JtaAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jt.Transaction:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type javax.transaction.Transaction not found
Configuration type org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration
> processType: org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration are: 
1) Hint{[osbav.ValidationAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jve.ExecutableValidator:EXISTENCE_CHECK]}
2) Hint{[osbav.ValidationAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbav.ValidationAutoConfiguration,osbac.ConditionalOnResource,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnResourceCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbav.ValidationAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbav.PrimaryDefaultValidatorPostProcessor:ALL]}
processing hint Hint{[osbav.ValidationAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[jve.ExecutableValidator:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type javax.validation.executable.ExecutableValidator not found
Configuration type org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfiguration
#3 hints on org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfiguration are: 
1) Hint{[osbawc.RestTemplateAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswc.RestTemplate:EXISTENCE_CHECK]}
2) Hint{[osbawc.RestTemplateAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbawc.RestTemplateAutoConfiguration,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbawc.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbawc.RestTemplateAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswc.RestTemplate:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.web.client.RestTemplate not found
Configuration type org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration are: 
1) Hint{[osbawe.EmbeddedWebServerFactoryCustomizerAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
2) Hint{[osbawe.EmbeddedWebServerFactoryCustomizerAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbawe.EmbeddedWebServerFactoryCustomizerAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaw.ServerProperties:ALL]}
4) Hint{[osbawe.EmbeddedWebServerFactoryCustomizerAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbawe.EmbeddedWebServerFactoryCustomizerAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
attempting registration of 2 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbawe.EmbeddedWebServerFactoryCustomizerAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbawe.EmbeddedWebServerFactoryCustomizerAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaw.ServerProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.web.ServerProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbawe.EmbeddedWebServerFactoryCustomizerAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
Configuration type org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration are: 
1) Hint{[osbawr.HttpHandlerAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oshsr.HttpHandler:EXISTENCE_CHECK,oswr.DispatcherHandler:EXISTENCE_CHECK]}
2) Hint{[osbawr.HttpHandlerAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbawr.HttpHandlerAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
4) Hint{[osbawr.HttpHandlerAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbawr.HttpHandlerAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[oshsr.HttpHandler:EXISTENCE_CHECK]}
6) Hint{[osbawr.HttpHandlerAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbawr.HttpHandlerAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oshsr.HttpHandler:EXISTENCE_CHECK,oswr.DispatcherHandler:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.http.server.reactive.HttpHandler not found
Configuration type org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfiguration are: 
1) Hint{[osbawr.ReactiveWebServerFactoryAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osh.ReactiveHttpInputMessage:EXISTENCE_CHECK]}
2) Hint{[osbawr.ReactiveWebServerFactoryAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbawr.ReactiveWebServerFactoryAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
4) Hint{[osbawr.ReactiveWebServerFactoryAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbawr.ReactiveWebServerFactoryAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaw.ServerProperties:ALL]}
6) Hint{[osbawr.ReactiveWebServerFactoryAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
7) Hint{[osbawr.ReactiveWebServerFactoryAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbawr.ReactiveWebServerFactoryConfiguration$EmbeddedNetty:ALL,osbawr.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow:ALL,osbawr.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat:ALL,osbawr.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar:ALL,osbawr.ReactiveWebServerFactoryConfiguration$EmbeddedJetty:ALL]}
processing hint Hint{[osbawr.ReactiveWebServerFactoryAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osh.ReactiveHttpInputMessage:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.http.ReactiveHttpInputMessage not found
Configuration type org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration are: 
1) Hint{[osbawr.WebFluxAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
2) Hint{[osbawr.WebFluxAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbawr.WebFluxAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswrc.WebFluxConfigurer:EXISTENCE_CHECK]}
4) Hint{[osbawr.WebFluxAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbawr.WebFluxAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[oswrc.WebFluxConfigurationSupport:EXISTENCE_CHECK]}
6) Hint{[osbawr.WebFluxAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbawr.WebFluxAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
attempting registration of 2 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbawr.WebFluxAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbawr.WebFluxAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswrc.WebFluxConfigurer:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.web.reactive.config.WebFluxConfigurer not found
Configuration type org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/reactive/error/ErrorWebFluxAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/web/reactive/error/ErrorWebFluxAutoConfiguration are: 
1) Hint{[osbawre.ErrorWebFluxAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
2) Hint{[osbawre.ErrorWebFluxAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbawre.ErrorWebFluxAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswrc.WebFluxConfigurer:EXISTENCE_CHECK]}
4) Hint{[osbawre.ErrorWebFluxAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbawre.ErrorWebFluxAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaw.ServerProperties:ALL,osbaw.ResourceProperties:ALL]}
6) Hint{[osbawre.ErrorWebFluxAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbawre.ErrorWebFluxAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
attempting registration of 2 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbawre.ErrorWebFluxAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbawre.ErrorWebFluxAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswrc.WebFluxConfigurer:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.web.reactive.config.WebFluxConfigurer not found
Configuration type org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorAutoConfiguration
#3 hints on org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorAutoConfiguration are: 
1) Hint{[osbawrfc.ClientHttpConnectorAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswrfc.WebClient:EXISTENCE_CHECK]}
2) Hint{[osbawrfc.ClientHttpConnectorAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbawrfc.ClientHttpConnectorAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbawrfc.ClientHttpConnectorConfiguration$ReactorNetty:ALL,osbawrfc.ClientHttpConnectorConfiguration$JettyClient:ALL]}
processing hint Hint{[osbawrfc.ClientHttpConnectorAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswrfc.WebClient:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.web.reactive.function.client.WebClient not found
Configuration type org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration
#2 hints on org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration are: 
1) Hint{[osbawrfc.WebClientAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswrfc.WebClient:EXISTENCE_CHECK]}
2) Hint{[osbawrfc.WebClientAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbawrfc.WebClientAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswrfc.WebClient:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.web.reactive.function.client.WebClient not found
Configuration type org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration
#5 hints on org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration are: 
1) Hint{[osbaws.DispatcherServletAutoConfiguration],skipIfTypesMissing=false,follow=false,specificTypes=[oswsi.AcceptHeaderLocaleResolver:ALL,oswst.FixedThemeResolver:ALL,oswsh.BeanNameUrlHandlerMapping:ALL,oswsmma.RequestMappingHandlerMapping:ALL,oswsfs.RouterFunctionMapping:ALL,oswsm.HttpRequestHandlerAdapter:ALL,oswsm.SimpleControllerHandlerAdapter:ALL,oswsmma.RequestMappingHandlerAdapter:ALL,oswsfs.HandlerFunctionAdapter:ALL,oswsmma.ExceptionHandlerExceptionResolver:ALL,oswsma.ResponseStatusExceptionResolver:ALL,oswsms.DefaultHandlerExceptionResolver:ALL,oswsv.DefaultRequestToViewNameTranslator:ALL,oswsv.InternalResourceViewResolver:ALL,oswss.SessionFlashMapManager:ALL],inferredTypes=[]}
2) Hint{[osbaws.DispatcherServletAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
3) Hint{[osbaws.DispatcherServletAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbaws.DispatcherServletAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osws.DispatcherServlet:EXISTENCE_CHECK]}
5) Hint{[osbaws.DispatcherServletAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbaws.DispatcherServletAutoConfiguration],skipIfTypesMissing=false,follow=false,specificTypes=[oswsi.AcceptHeaderLocaleResolver:ALL,oswst.FixedThemeResolver:ALL,oswsh.BeanNameUrlHandlerMapping:ALL,oswsmma.RequestMappingHandlerMapping:ALL,oswsfs.RouterFunctionMapping:ALL,oswsm.HttpRequestHandlerAdapter:ALL,oswsm.SimpleControllerHandlerAdapter:ALL,oswsmma.RequestMappingHandlerAdapter:ALL,oswsfs.HandlerFunctionAdapter:ALL,oswsmma.ExceptionHandlerExceptionResolver:ALL,oswsma.ResponseStatusExceptionResolver:ALL,oswsms.DefaultHandlerExceptionResolver:ALL,oswsv.DefaultRequestToViewNameTranslator:ALL,oswsv.InternalResourceViewResolver:ALL,oswss.SessionFlashMapManager:ALL],inferredTypes=[]}
attempting registration of 15 specific types
attempting registration of 0 inferred types
attempting registration of 1 elements of annotation chain
processing hint Hint{[osbaws.DispatcherServletAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
attempting registration of 2 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbaws.DispatcherServletAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbaws.DispatcherServletAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osws.DispatcherServlet:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.web.servlet.DispatcherServlet not found
Configuration type org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration are: 
1) Hint{[osbaws.ServletWebServerFactoryAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[js.ServletRequest:EXISTENCE_CHECK]}
2) Hint{[osbaws.ServletWebServerFactoryAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaws.ServletWebServerFactoryAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
4) Hint{[osbaws.ServletWebServerFactoryAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbaws.ServletWebServerFactoryAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaw.ServerProperties:ALL]}
6) Hint{[osbaws.ServletWebServerFactoryAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
7) Hint{[osbaws.ServletWebServerFactoryAutoConfiguration,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbaws.ServletWebServerFactoryConfiguration$EmbeddedJetty:ALL,osbaws.ServletWebServerFactoryConfiguration$EmbeddedTomcat:ALL,osbaws.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar:ALL,osbaws.ServletWebServerFactoryConfiguration$EmbeddedUndertow:ALL]}
processing hint Hint{[osbaws.ServletWebServerFactoryAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[js.ServletRequest:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type javax.servlet.ServletRequest not found
Configuration type org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration
#6 hints on org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration are: 
1) Hint{[osbawse.ErrorMvcAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
2) Hint{[osbawse.ErrorMvcAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbawse.ErrorMvcAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osws.DispatcherServlet:EXISTENCE_CHECK,js.Servlet:EXISTENCE_CHECK]}
4) Hint{[osbawse.ErrorMvcAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbawse.ErrorMvcAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaws.WebMvcProperties:ALL,osbaw.ServerProperties:ALL,osbaw.ResourceProperties:ALL]}
6) Hint{[osbawse.ErrorMvcAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbawse.ErrorMvcAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
attempting registration of 2 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbawse.ErrorMvcAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbawse.ErrorMvcAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osws.DispatcherServlet:EXISTENCE_CHECK,js.Servlet:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type org.springframework.web.servlet.DispatcherServlet not found
Configuration type org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration are: 
1) Hint{[osbaws.HttpEncodingAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaw.ServerProperties:ALL]}
2) Hint{[osbaws.HttpEncodingAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
3) Hint{[osbaws.HttpEncodingAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
4) Hint{[osbaws.HttpEncodingAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbaws.HttpEncodingAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswf.CharacterEncodingFilter:EXISTENCE_CHECK]}
6) Hint{[osbaws.HttpEncodingAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
7) Hint{[osbaws.HttpEncodingAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbaws.HttpEncodingAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaw.ServerProperties:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.web.ServerProperties found, will get accessibility ALL
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbaws.HttpEncodingAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar found, will get accessibility ALL
will follow Type:org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbaws.HttpEncodingAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
attempting registration of 2 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbaws.HttpEncodingAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbaws.HttpEncodingAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswf.CharacterEncodingFilter:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.web.filter.CharacterEncodingFilter not found
Configuration type org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/servlet/MultipartAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/web/servlet/MultipartAutoConfiguration are: 
1) Hint{[osbaws.MultipartAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswms.StandardServletMultipartResolver:EXISTENCE_CHECK,js.Servlet:EXISTENCE_CHECK,js.MultipartConfigElement:EXISTENCE_CHECK]}
2) Hint{[osbaws.MultipartAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaws.MultipartAutoConfiguration,osbac.ConditionalOnProperty,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnPropertyCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbaws.MultipartAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
5) Hint{[osbaws.MultipartAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbaws.MultipartAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaws.MultipartProperties:ALL]}
7) Hint{[osbaws.MultipartAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbaws.MultipartAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswms.StandardServletMultipartResolver:EXISTENCE_CHECK,js.Servlet:EXISTENCE_CHECK,js.MultipartConfigElement:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type org.springframework.web.multipart.support.StandardServletMultipartResolver not found
Configuration type org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration
> processType: org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration
#7 hints on org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration are: 
1) Hint{[osbaws.WebMvcAutoConfiguration],skipIfTypesMissing=true,follow=false,specificTypes=[juc.Callable:EXISTENCE_MC],inferredTypes=[]}
2) Hint{[osbaws.WebMvcAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
3) Hint{[osbaws.WebMvcAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
4) Hint{[osbaws.WebMvcAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osws.DispatcherServlet:EXISTENCE_CHECK,js.Servlet:EXISTENCE_CHECK,oswsca.WebMvcConfigurer:EXISTENCE_CHECK]}
5) Hint{[osbaws.WebMvcAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
6) Hint{[osbaws.WebMvcAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[oswsca.WebMvcConfigurationSupport:EXISTENCE_CHECK]}
7) Hint{[osbaws.WebMvcAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbaws.WebMvcAutoConfiguration],skipIfTypesMissing=true,follow=false,specificTypes=[juc.Callable:EXISTENCE_MC],inferredTypes=[]}
attempting registration of 1 specific types
attempting registration of 0 inferred types
attempting registration of 1 elements of annotation chain
processing hint Hint{[osbaws.WebMvcAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
attempting registration of 2 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbaws.WebMvcAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbaws.WebMvcAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[osws.DispatcherServlet:EXISTENCE_CHECK,js.Servlet:EXISTENCE_CHECK,oswsca.WebMvcConfigurer:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type org.springframework.web.servlet.DispatcherServlet not found
Configuration type org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration
> processType: org/springframework/boot/autoconfigure/websocket/reactive/WebSocketReactiveAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/websocket/reactive/WebSocketReactiveAutoConfiguration are: 
1) Hint{[osbawr.WebSocketReactiveAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[js.Servlet:EXISTENCE_CHECK,jws.ServerContainer:EXISTENCE_CHECK]}
2) Hint{[osbawr.WebSocketReactiveAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbawr.WebSocketReactiveAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
4) Hint{[osbawr.WebSocketReactiveAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbawr.WebSocketReactiveAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[js.Servlet:EXISTENCE_CHECK,jws.ServerContainer:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type javax.servlet.Servlet not found
Configuration type org.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration
> processType: org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration are: 
1) Hint{[osbaws.WebSocketServletAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[js.Servlet:EXISTENCE_CHECK,jws.ServerContainer:EXISTENCE_CHECK]}
2) Hint{[osbaws.WebSocketServletAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaws.WebSocketServletAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
4) Hint{[osbaws.WebSocketServletAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbaws.WebSocketServletAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[js.Servlet:EXISTENCE_CHECK,jws.ServerContainer:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 2 inferred types
inferred type javax.servlet.Servlet not found
Configuration type org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration
> processType: org/springframework/boot/autoconfigure/websocket/servlet/WebSocketMessagingAutoConfiguration
#4 hints on org/springframework/boot/autoconfigure/websocket/servlet/WebSocketMessagingAutoConfiguration are: 
1) Hint{[osbaws.WebSocketMessagingAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
2) Hint{[osbaws.WebSocketMessagingAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaws.WebSocketMessagingAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswsca.WebSocketMessageBrokerConfigurer:EXISTENCE_CHECK]}
4) Hint{[osbaws.WebSocketMessagingAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbaws.WebSocketMessagingAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
attempting registration of 2 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbaws.WebSocketMessagingAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbaws.WebSocketMessagingAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswsca.WebSocketMessageBrokerConfigurer:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer not found
Configuration type org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration
> processType: org/springframework/boot/autoconfigure/webservices/WebServicesAutoConfiguration
#8 hints on org/springframework/boot/autoconfigure/webservices/WebServicesAutoConfiguration are: 
1) Hint{[osbaw.WebServicesAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
2) Hint{[osbaw.WebServicesAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
3) Hint{[osbaw.WebServicesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswth.MessageDispatcherServlet:EXISTENCE_CHECK]}
4) Hint{[osbaw.WebServicesAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
5) Hint{[osbaw.WebServicesAutoConfiguration,osbac.ConditionalOnMissingBean],skipIfTypesMissing=true,follow=false,specificTypes=[osbac.SearchStrategy:ALL],inferredTypes=[oswca.WsConfigurationSupport:EXISTENCE_CHECK]}
6) Hint{[osbaw.WebServicesAutoConfiguration,osbac.ConditionalOnMissingBean,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnBeanCondition:RESOURCE_CTORS_ONLY]}
7) Hint{[osbaw.WebServicesAutoConfiguration,osbcp.EnableConfigurationProperties],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbaw.WebServicesProperties:ALL]}
8) Hint{[osbaw.WebServicesAutoConfiguration,osbcp.EnableConfigurationProperties,osca.Import],skipIfTypesMissing=false,follow=true,specificTypes=[],inferredTypes=[osbcp.EnableConfigurationPropertiesRegistrar:ALL]}
processing hint Hint{[osbaw.WebServicesAutoConfiguration,osbac.ConditionalOnWebApplication],skipIfTypesMissing=true,follow=false,specificTypes=[oswcs.GenericWebApplicationContext:ALL,osbac.ConditionalOnWebApplication$Type:ALL],inferredTypes=[]}
attempting registration of 2 specific types
attempting registration of 0 inferred types
attempting registration of 2 elements of annotation chain
processing hint Hint{[osbaw.WebServicesAutoConfiguration,osbac.ConditionalOnWebApplication,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnWebApplicationCondition:RESOURCE_CTORS_ONLY]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition found, will get accessibility RESOURCE_CTORS_ONLY
attempting registration of 3 elements of annotation chain
processing hint Hint{[osbaw.WebServicesAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswth.MessageDispatcherServlet:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 1 inferred types
inferred type org.springframework.ws.transport.http.MessageDispatcherServlet not found
Configuration type org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration


Processing configuration type org.springframework.boot.autoconfigure.webservices.client.WebServiceTemplateAutoConfiguration
> processType: org/springframework/boot/autoconfigure/webservices/client/WebServiceTemplateAutoConfiguration
#2 hints on org/springframework/boot/autoconfigure/webservices/client/WebServiceTemplateAutoConfiguration are: 
1) Hint{[osbawc.WebServiceTemplateAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswcc.WebServiceTemplate:EXISTENCE_CHECK,oso.Unmarshaller:EXISTENCE_CHECK,oso.Marshaller:EXISTENCE_CHECK]}
2) Hint{[osbawc.WebServiceTemplateAutoConfiguration,osbac.ConditionalOnClass,osca.Conditional],skipIfTypesMissing=false,follow=false,specificTypes=[],inferredTypes=[osbac.OnClassCondition:RESOURCE_CTORS_ONLY]}
processing hint Hint{[osbawc.WebServiceTemplateAutoConfiguration,osbac.ConditionalOnClass],skipIfTypesMissing=true,follow=false,specificTypes=[],inferredTypes=[oswcc.WebServiceTemplate:EXISTENCE_CHECK,oso.Unmarshaller:EXISTENCE_CHECK,oso.Marshaller:EXISTENCE_CHECK]}
attempting registration of 0 specific types
attempting registration of 3 inferred types
inferred type org.springframework.ws.client.core.WebServiceTemplate not found
Configuration type org.springframework.boot.autoconfigure.webservices.client.WebServiceTemplateAutoConfiguration has failed validation
Excluding auto-configuration org.springframework.boot.autoconfigure.webservices.client.WebServiceTemplateAutoConfiguration
Excluding 113 auto-configurations from spring.factories file
These configurations are remaining in the EnableAutoConfiguration key value:
1) org.springframework.boot.autoconfigure.aop.AopAutoConfiguration
2) org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration
3) org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration
4) org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration
5) org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration
6) org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration
7) org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration
8) org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration
  removed 113 classes
The new spring.factories is: vvvvvvvvv
#
#Mon Feb 10 12:05:27 PST 2020
org.springframework.boot.autoconfigure.AutoConfigurationImportFilter=org.springframework.boot.autoconfigure.condition.OnBeanCondition,org.springframework.boot.autoconfigure.condition.OnClassCondition,org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition
org.springframework.boot.diagnostics.FailureAnalyzer=org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer,org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingFailureAnalyzer,org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer,org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer,org.springframework.boot.autoconfigure.session.NonUniqueSessionRepositoryFailureAnalyzer
org.springframework.boot.autoconfigure.AutoConfigurationImportListener=org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener
org.springframework.context.ApplicationContextInitializer=org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer,org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener
org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider=org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider,org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider,org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider,org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider
org.springframework.context.ApplicationListener=org.springframework.boot.autoconfigure.BackgroundPreinitializer
org.springframework.boot.autoconfigure.EnableAutoConfiguration=org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration

^^^^^^^^
Adding all the classes for this key: org.springframework.boot.diagnostics.FailureAnalyzer
Registering reflective access to org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer: []
Registering reflective access to org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer: []
Registering reflective access to org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer: []
Registering reflective access to org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer: []
Registering reflective access to org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer: []
Registering reflective access to org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer: []
Registering reflective access to org.springframework.boot.diagnostics.analyzer.ConnectorStartFailureAnalyzer: []
Registering reflective access to org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer: []
Registering reflective access to org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer: []
Registering reflective access to org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer: []
Registering reflective access to org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer: []
spring.factories processing, problem adding access for key org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer: javax/validation/ValidationException
Registering reflective access to org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer: []
Registering reflective access to org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer: []
Adding all the classes for this key: org.springframework.boot.env.EnvironmentPostProcessor
Registering reflective access to org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor: []
Registering reflective access to org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor: []
Registering reflective access to org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor: []
Registering reflective access to org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor: []
Adding all the classes for this key: org.springframework.boot.SpringApplicationRunListener
Registering reflective access to org.springframework.boot.context.event.EventPublishingRunListener: [allDeclaredConstructors]
Adding all the classes for this key: org.springframework.context.ApplicationContextInitializer
Registering reflective access to org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer: []
Registering reflective access to org.springframework.boot.context.ContextIdApplicationContextInitializer: []
Registering reflective access to org.springframework.boot.context.config.DelegatingApplicationContextInitializer: []
Registering reflective access to org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer: []
Registering reflective access to org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer: []
Adding all the classes for this key: org.springframework.boot.env.PropertySourceLoader
Adding all the classes for this key: org.springframework.context.ApplicationListener
Registering reflective access to org.springframework.boot.ClearCachesApplicationListener: []
Registering reflective access to org.springframework.boot.builder.ParentContextCloserApplicationListener: []
Registering reflective access to org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor: []
Registering reflective access to org.springframework.boot.context.FileEncodingApplicationListener: []
Registering reflective access to org.springframework.boot.context.config.AnsiOutputApplicationListener: []
Registering reflective access to org.springframework.boot.context.config.ConfigFileApplicationListener: []
Registering reflective access to org.springframework.boot.context.config.DelegatingApplicationListener: []
Registering reflective access to org.springframework.boot.context.logging.ClasspathLoggingApplicationListener: []
Registering reflective access to org.springframework.boot.context.logging.LoggingApplicationListener: []
Registering reflective access to org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener: []
Adding all the classes for this key: org.springframework.boot.diagnostics.FailureAnalysisReporter
Registering reflective access to org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter: []
Adding all the classes for this key: org.springframework.boot.SpringBootExceptionReporter
Registering reflective access to org.springframework.boot.diagnostics.FailureAnalyzers: [allDeclaredConstructors]
Registering reflective access to org.springframework.boot.env.PropertiesPropertySourceLoader: []
Processing spring.factories - PropertySourceLoader lists #1 property source loaders
These property source loaders are remaining in the PropertySourceLoader key value:
1) org.springframework.boot.env.PropertiesPropertySourceLoader
  removed 1 classes
The new spring.factories is: vvvvvvvvv
#
#Mon Feb 10 12:05:27 PST 2020
org.springframework.boot.diagnostics.FailureAnalyzer=org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer,org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer,org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer,org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer,org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer,org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer,org.springframework.boot.diagnostics.analyzer.ConnectorStartFailureAnalyzer,org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer,org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer,org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer,org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer,org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer,org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer
org.springframework.boot.env.EnvironmentPostProcessor=org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor,org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor,org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor,org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor
org.springframework.boot.SpringApplicationRunListener=org.springframework.boot.context.event.EventPublishingRunListener
org.springframework.context.ApplicationContextInitializer=org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer,org.springframework.boot.context.ContextIdApplicationContextInitializer,org.springframework.boot.context.config.DelegatingApplicationContextInitializer,org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer,org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer
org.springframework.boot.env.PropertySourceLoader=org.springframework.boot.env.PropertiesPropertySourceLoader
org.springframework.context.ApplicationListener=org.springframework.boot.ClearCachesApplicationListener,org.springframework.boot.builder.ParentContextCloserApplicationListener,org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor,org.springframework.boot.context.FileEncodingApplicationListener,org.springframework.boot.context.config.AnsiOutputApplicationListener,org.springframework.boot.context.config.ConfigFileApplicationListener,org.springframework.boot.context.config.DelegatingApplicationListener,org.springframework.boot.context.logging.ClasspathLoggingApplicationListener,org.springframework.boot.context.logging.LoggingApplicationListener,org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener
org.springframework.boot.diagnostics.FailureAnalysisReporter=org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter
org.springframework.boot.SpringBootExceptionReporter=org.springframework.boot.diagnostics.FailureAnalyzers

^^^^^^^^
Adding all the classes for this key: org.springframework.beans.BeanInfoFactory
Registering reflective access to org.springframework.beans.ExtendedBeanInfoFactory: []
Processing META-INF/spring.components files...
Registering Spring Component: com.example.commandlinerunner.CLR
Registering reflective access to com.example.commandlinerunner.CLR: [allDeclaredConstructors, allDeclaredMethods, allDeclaredClasses]
Registering reflective access to com.example.commandlinerunner.CLR: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to java.lang.Object: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to org.springframework.boot.CommandLineRunner: [allDeclaredConstructors, allDeclaredMethods]
WARNING: type org.springframework.boot.CommandLineRunner being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
Registering reflective access to org.springframework.stereotype.Component: [allDeclaredMethods]
WARNING: type org.springframework.stereotype.Component being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
Registering reflective access to org.springframework.stereotype.Component: [allDeclaredConstructors, allDeclaredMethods]
WARNING: type org.springframework.stereotype.Component being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
Registering reflective access to java.lang.Object: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to java.lang.annotation.Annotation: [allDeclaredConstructors, allDeclaredMethods]
Registering Spring Component: com.example.commandlinerunner.CommandlinerunnerApplication
Registering reflective access to com.example.commandlinerunner.CommandlinerunnerApplication: [allDeclaredConstructors, allDeclaredMethods, allDeclaredClasses]
Registering reflective access to com.example.commandlinerunner.CommandlinerunnerApplication: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to java.lang.Object: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to org.springframework.stereotype.Component: [allDeclaredMethods]
WARNING: type org.springframework.stereotype.Component being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
Registering reflective access to org.springframework.stereotype.Component: [allDeclaredConstructors, allDeclaredMethods]
WARNING: type org.springframework.stereotype.Component being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
Registering reflective access to java.lang.Object: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to java.lang.annotation.Annotation: [allDeclaredConstructors, allDeclaredMethods]
Registered 2 entries
Registering Spring Component: com.example.commandlinerunner.CLR
Registering reflective access to com.example.commandlinerunner.CLR: [allDeclaredConstructors, allDeclaredMethods, allDeclaredClasses]
Registering reflective access to com.example.commandlinerunner.CLR: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to java.lang.Object: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to org.springframework.boot.CommandLineRunner: [allDeclaredConstructors, allDeclaredMethods]
WARNING: type org.springframework.boot.CommandLineRunner being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
Registering reflective access to org.springframework.stereotype.Component: [allDeclaredMethods]
WARNING: type org.springframework.stereotype.Component being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
Registering reflective access to org.springframework.stereotype.Component: [allDeclaredConstructors, allDeclaredMethods]
WARNING: type org.springframework.stereotype.Component being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
Registering reflective access to java.lang.Object: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to java.lang.annotation.Annotation: [allDeclaredConstructors, allDeclaredMethods]
Registering Spring Component: com.example.commandlinerunner.CommandlinerunnerApplication
Registering reflective access to com.example.commandlinerunner.CommandlinerunnerApplication: [allDeclaredConstructors, allDeclaredMethods, allDeclaredClasses]
Registering reflective access to com.example.commandlinerunner.CommandlinerunnerApplication: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to java.lang.Object: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to org.springframework.stereotype.Component: [allDeclaredMethods]
WARNING: type org.springframework.stereotype.Component being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
Registering reflective access to org.springframework.stereotype.Component: [allDeclaredConstructors, allDeclaredMethods]
WARNING: type org.springframework.stereotype.Component being added dynamically whilst /reflect.json already contains it - does it need to be in the file? 
Registering reflective access to java.lang.Object: [allDeclaredConstructors, allDeclaredMethods]
Registering reflective access to java.lang.annotation.Annotation: [allDeclaredConstructors, allDeclaredMethods]
Registered 2 entries
Configuring initialization time for specific types and packages:
#123 buildtime-init-classes   #22 buildtime-init-packages   #22 runtime-init-classes    #0 runtime-init-packages

Warning: class initialization of class org.springframework.boot.validation.MessageInterpolatorFactory failed with exception java.lang.NoClassDefFoundError: javax/validation/ValidationException. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=org.springframework.boot.validation.MessageInterpolatorFactory to explicitly request delayed initialization of this class.
Registering these packages for buildtime initialization: 
[org.springframework.core.env, org.apache.logging.log4j, org.apache.logging.slf4j, org.jboss.logging, org.hibernate.validator.internal.metadata.provider, org.hibernate.validator.internal.metadata.aggregated, org.hibernate.validator.internal.metadata.raw, org.hibernate.validator.internal.engine, ch.qos.logback.classic.spi, javax.validation, org.hibernate.validator.constraints, org.hibernate.validator.internal.engine.groups, org.hibernate.validator.internal.engine.valueextraction, org.hibernate.validator.internal.util, org.hibernate.validator.internal.cfg.context, org.hibernate.validator.internal.metadata.core, org.hibernate.validator.internal.metadata.aggregated.rule, org.hibernate.validator.internal.engine.constraintvalidation, org.hibernate.validator.internal.util.logging.LoggerFactory, ch.qos.logback.core, ch.qos.logback.classic, ch.qos.logback.classic.util]
Registering these packages for runtime initialization: 
[]
Number of types dynamically registered for reflective access: #596
Warning: class initialization of class org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer failed with exception java.lang.NoClassDefFoundError: javax/validation/ValidationException. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer to explicitly request delayed initialization of this class.
Warning: class initialization of class org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration failed with exception java.lang.NoClassDefFoundError: org/springframework/data/redis/serializer/RedisSerializer. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration to explicitly request delayed initialization of this class.
Warning: class initialization of class org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer failed with exception java.lang.NoClassDefFoundError: org/springframework/jdbc/CannotGetJdbcConnectionException. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer to explicitly request delayed initialization of this class.
Warning: class initialization of class org.springframework.boot.autoconfigure.cache.InfinispanCacheConfiguration failed with exception java.lang.NoClassDefFoundError: org/infinispan/manager/EmbeddedCacheManager. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=org.springframework.boot.autoconfigure.cache.InfinispanCacheConfiguration to explicitly request delayed initialization of this class.
Warning: class initialization of class org.springframework.boot.jdbc.EmbeddedDatabaseConnection failed with exception java.lang.NoClassDefFoundError: org/springframework/dao/DataAccessException. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=org.springframework.boot.jdbc.EmbeddedDatabaseConnection to explicitly request delayed initialization of this class.
Warning: class initialization of class org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener$LiquibasePresent failed with exception java.lang.NoClassDefFoundError: liquibase/servicelocator/PackageScanClassResolver. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener$LiquibasePresent to explicitly request delayed initialization of this class.
Warning: class initialization of class org.springframework.boot.json.JacksonJsonParser failed with exception java.lang.NoClassDefFoundError: com/fasterxml/jackson/core/type/TypeReference. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=org.springframework.boot.json.JacksonJsonParser to explicitly request delayed initialization of this class.
Warning: class initialization of class org.springframework.boot.json.GsonJsonParser failed with exception java.lang.NoClassDefFoundError: com/google/gson/reflect/TypeToken. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=org.springframework.boot.json.GsonJsonParser to explicitly request delayed initialization of this class.
Warning: class initialization of class org.springframework.core.type.filter.AspectJTypeFilter failed with exception java.lang.NoClassDefFoundError: org/aspectj/weaver/World. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=org.springframework.core.type.filter.AspectJTypeFilter to explicitly request delayed initialization of this class.
[commandlinerunner:52117]   (typeflow):  10,751.26 ms,  2.96 GB
[commandlinerunner:52117]    (objects):  12,599.46 ms,  2.96 GB
[commandlinerunner:52117]   (features):   2,913.67 ms,  2.96 GB
[commandlinerunner:52117]     analysis:  27,229.87 ms,  2.96 GB
[commandlinerunner:52117]     (clinit):     475.37 ms,  2.99 GB
[commandlinerunner:52117]     universe:   1,569.93 ms,  2.99 GB
[commandlinerunner:52117]      (parse):   2,084.49 ms,  2.99 GB
[commandlinerunner:52117]     (inline):   5,166.86 ms,  4.31 GB
[commandlinerunner:52117]    (compile):  14,817.85 ms,  5.63 GB
[commandlinerunner:52117]      compile:  23,625.32 ms,  5.63 GB
[commandlinerunner:52117]        image:   3,597.75 ms,  5.63 GB
[commandlinerunner:52117]        write:     831.82 ms,  5.63 GB
[commandlinerunner:52117]      [total]:  64,941.94 ms,  5.63 GB

real	1m6.766s
user	7m33.072s
sys	0m12.528s
