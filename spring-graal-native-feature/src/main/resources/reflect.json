[
{"name":"org.reactivestreams.Publisher"},
// These array types are due to a change in graal that isn't as actively adding array types anymore
	{"name":"org.springframework.core.io.InputStreamSource[]"},
	{"name":"java.lang.String[]"},
	{"name":"java.io.Serializable[]"},
	{"name":"java.lang.Comparable[]"},
// vanilla-jpa vvv
	{"name":"org.apache.logging.log4j.spi.LoggerContext","allDeclaredMethods":true,"allDeclaredConstructors":true,"allDeclaredFields":true},
	{
		"name": "java.lang.Throwable",
		"allDeclaredFields": true,
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true
	},
	// vvv vanilla-jpa vvv
    {
		"name": "org.springframework.beans.factory.config.PropertiesFactoryBean",
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true
    },
	{//superclass of PropertiesFactoryBean
		"name": "org.springframework.core.io.support.PropertiesLoaderSupport",
		"allDeclaredConstructors": true,
 		"allDeclaredMethods": true
	},
	{
		"name": "com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry[]",
		"allDeclaredConstructors": true
	},

// vanilla-jpa ^^^
// This are related to getting petclinic to work, some need a deeper dive though (e.g. the
// proxy related ones - we need to know if a spring aop proxy will be getting created)
//
// xx
       {
               "name": "java.util.logging.LogManager",
               "allDeclaredConstructors": true,
              "allDeclaredMethods": true,
               "allDeclaredClasses": true
       },
       {
               "name": "org.springframework.boot.logging.java.JavaLoggingSystem",
               "allDeclaredConstructors": true,
              "allDeclaredMethods": true,
               "allDeclaredClasses": true
       },
	{// fixes petclinic removeUnusedAutoconfig - was being added via CassandraReactiveDataAC
	 // need to figure out what should be pulling it in the general case.
		"name": "reactor.core.publisher.Flux",
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true
	},
	{
		"name": "org.springframework.context.ConfigurableApplicationContext",
		"allDeclaredConstructors": true
		//"allDeclaredMethods": true
	},
	{
		"name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
		"allDeclaredConstructors": true
	},
	{
		"name": "org.springframework.context.event.DefaultEventListenerFactory",
		"methods": [
			{
				"name": "<init>",
				"parameterTypes": [
				]
			}
		]
	},
	{
		"name": "org.springframework.boot.context.TypeExcludeFilter",
		"allDeclaredConstructors": true
	},
	{
		"name": "org.springframework.boot.SpringBootConfiguration",
		"allDeclaredMethods": true
	},
	{
		"name": "org.springframework.boot.autoconfigure.SpringBootApplication",
		"allDeclaredConstructors": true,
		"allDeclaredFields": true,
		"allDeclaredMethods": true
	},
	{
		"name": "org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
		"allDeclaredConstructors": true
	},
	{
		"name": "org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar",
		"allDeclaredConstructors": true
		//"allDeclaredMethods": true
},	
	{
		"name": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler",
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true
	},
	// These from DefaultIdentifierGeneratorFactory
	{
		"name": "app.main.model.Foo",
		"allDeclaredConstructors": true,
		"allDeclaredFields": true,
		"allDeclaredMethods": true
	}
]